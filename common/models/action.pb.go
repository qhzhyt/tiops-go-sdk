// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: tiops/common/models/action.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_ServiceAction    ActionType = 0
	ActionType_ExecutorAction   ActionType = 1
	ActionType_BuildInAction    ActionType = 2
	ActionType_CodeAction       ActionType = 3
	ActionType_DataSourceAction ActionType = 4
	ActionType_EngineAction     ActionType = 5
	ActionType_WorkflowAction   ActionType = 6
	ActionType_CustomAction     ActionType = 7
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ServiceAction",
		1: "ExecutorAction",
		2: "BuildInAction",
		3: "CodeAction",
		4: "DataSourceAction",
		5: "EngineAction",
		6: "WorkflowAction",
		7: "CustomAction",
	}
	ActionType_value = map[string]int32{
		"ServiceAction":    0,
		"ExecutorAction":   1,
		"BuildInAction":    2,
		"CodeAction":       3,
		"DataSourceAction": 4,
		"EngineAction":     5,
		"WorkflowAction":   6,
		"CustomAction":     7,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_models_action_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_tiops_common_models_action_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{0}
}

type ActionSource int32

const (
	ActionSource_FromProject ActionSource = 0
	ActionSource_FromImage   ActionSource = 1
	ActionSource_FromService ActionSource = 2
	ActionSource_FromOther   ActionSource = 6
	ActionSource_Buildin     ActionSource = 7
)

// Enum value maps for ActionSource.
var (
	ActionSource_name = map[int32]string{
		0: "FromProject",
		1: "FromImage",
		2: "FromService",
		6: "FromOther",
		7: "Buildin",
	}
	ActionSource_value = map[string]int32{
		"FromProject": 0,
		"FromImage":   1,
		"FromService": 2,
		"FromOther":   6,
		"Buildin":     7,
	}
)

func (x ActionSource) Enum() *ActionSource {
	p := new(ActionSource)
	*p = x
	return p
}

func (x ActionSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionSource) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_models_action_proto_enumTypes[1].Descriptor()
}

func (ActionSource) Type() protoreflect.EnumType {
	return &file_tiops_common_models_action_proto_enumTypes[1]
}

func (x ActionSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionSource.Descriptor instead.
func (ActionSource) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{1}
}

type CallMode int32

const (
	CallMode_OnceCall         CallMode = 0
	CallMode_PullStreamCall   CallMode = 1
	CallMode_PushStreamCall   CallMode = 2
	CallMode_DuplexStreamCall CallMode = 3
)

// Enum value maps for CallMode.
var (
	CallMode_name = map[int32]string{
		0: "OnceCall",
		1: "PullStreamCall",
		2: "PushStreamCall",
		3: "DuplexStreamCall",
	}
	CallMode_value = map[string]int32{
		"OnceCall":         0,
		"PullStreamCall":   1,
		"PushStreamCall":   2,
		"DuplexStreamCall": 3,
	}
)

func (x CallMode) Enum() *CallMode {
	p := new(CallMode)
	*p = x
	return p
}

func (x CallMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_models_action_proto_enumTypes[2].Descriptor()
}

func (CallMode) Type() protoreflect.EnumType {
	return &file_tiops_common_models_action_proto_enumTypes[2]
}

func (x CallMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallMode.Descriptor instead.
func (CallMode) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{2}
}

type ActionOptionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label       string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty" bson:"label"`
	Value       string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
}

func (x *ActionOptionItem) Reset() {
	*x = ActionOptionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionOptionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionOptionItem) ProtoMessage() {}

func (x *ActionOptionItem) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionOptionItem.ProtoReflect.Descriptor instead.
func (*ActionOptionItem) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{0}
}

func (x *ActionOptionItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ActionOptionItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ActionOptionItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ActionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type        string              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Description string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	Default     string              `protobuf:"bytes,4,opt,name=default,proto3" json:"default,omitempty" bson:"default"`
	Options     []*ActionOptionItem `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" bson:"options"`
	Required    bool                `protobuf:"varint,6,opt,name=required,proto3" json:"required,omitempty" bson:"required"`
}

func (x *ActionOption) Reset() {
	*x = ActionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionOption) ProtoMessage() {}

func (x *ActionOption) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionOption.ProtoReflect.Descriptor instead.
func (*ActionOption) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{1}
}

func (x *ActionOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionOption) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ActionOption) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActionOption) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *ActionOption) GetOptions() []*ActionOptionItem {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ActionOption) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  map[string]string `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"inputs"`
	Outputs map[string]string `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"outputs"`
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{2}
}

func (x *TestCase) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TestCase) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type SubAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Inputs      map[string]string `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"inputs"`
	Outputs     map[string]string `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"outputs"`
	Description string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	Selector    *ActionSelector   `protobuf:"bytes,5,opt,name=selector,proto3" json:"selector,omitempty" bson:"selector"`
}

func (x *SubAction) Reset() {
	*x = SubAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubAction) ProtoMessage() {}

func (x *SubAction) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubAction.ProtoReflect.Descriptor instead.
func (*SubAction) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{3}
}

func (x *SubAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubAction) GetInputs() map[string]string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *SubAction) GetOutputs() map[string]string {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *SubAction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubAction) GetSelector() *ActionSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

type ActionSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags         []string     `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" bson:"tags"`
	Types        []ActionType `protobuf:"varint,2,rep,packed,name=types,proto3,enum=models.ActionType" json:"types,omitempty" bson:"types"`
	Langs        []string     `protobuf:"bytes,3,rep,name=langs,proto3" json:"langs,omitempty" bson:"langs"`
	ExcludeTags  []string     `protobuf:"bytes,4,rep,name=excludeTags,proto3" json:"excludeTags,omitempty" bson:"excludeTags"`
	ExcludeTypes []string     `protobuf:"bytes,5,rep,name=excludeTypes,proto3" json:"excludeTypes,omitempty" bson:"excludeTypes"`
	ExcludeLangs []string     `protobuf:"bytes,6,rep,name=excludeLangs,proto3" json:"excludeLangs,omitempty" bson:"excludeLangs"`
}

func (x *ActionSelector) Reset() {
	*x = ActionSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelector) ProtoMessage() {}

func (x *ActionSelector) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelector.ProtoReflect.Descriptor instead.
func (*ActionSelector) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{4}
}

func (x *ActionSelector) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ActionSelector) GetTypes() []ActionType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ActionSelector) GetLangs() []string {
	if x != nil {
		return x.Langs
	}
	return nil
}

func (x *ActionSelector) GetExcludeTags() []string {
	if x != nil {
		return x.ExcludeTags
	}
	return nil
}

func (x *ActionSelector) GetExcludeTypes() []string {
	if x != nil {
		return x.ExcludeTypes
	}
	return nil
}

func (x *ActionSelector) GetExcludeLangs() []string {
	if x != nil {
		return x.ExcludeLangs
	}
	return nil
}

type StatusViewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Label      string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty" bson:"label"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Template   string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty" bson:"template"`
	UpdateFunc string `protobuf:"bytes,5,opt,name=updateFunc,proto3" json:"updateFunc,omitempty" bson:"updateFunc"`
	Width      string `protobuf:"bytes,6,opt,name=width,proto3" json:"width,omitempty" bson:"width"`
	Height     string `protobuf:"bytes,7,opt,name=height,proto3" json:"height,omitempty" bson:"height"`
}

func (x *StatusViewConfig) Reset() {
	*x = StatusViewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusViewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusViewConfig) ProtoMessage() {}

func (x *StatusViewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusViewConfig.ProtoReflect.Descriptor instead.
func (*StatusViewConfig) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{5}
}

func (x *StatusViewConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusViewConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *StatusViewConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StatusViewConfig) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *StatusViewConfig) GetUpdateFunc() string {
	if x != nil {
		return x.UpdateFunc
	}
	return ""
}

func (x *StatusViewConfig) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *StatusViewConfig) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type ActionDisplayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeContentTemplate string              `protobuf:"bytes,1,opt,name=nodeContentTemplate,proto3" json:"nodeContentTemplate,omitempty" bson:"nodeContentTemplate"`
	StatusViewConfigs   []*StatusViewConfig `protobuf:"bytes,2,rep,name=statusViewConfigs,proto3" json:"statusViewConfigs,omitempty" bson:"statusViewConfigs"`
}

func (x *ActionDisplayConfig) Reset() {
	*x = ActionDisplayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDisplayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDisplayConfig) ProtoMessage() {}

func (x *ActionDisplayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDisplayConfig.ProtoReflect.Descriptor instead.
func (*ActionDisplayConfig) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{6}
}

func (x *ActionDisplayConfig) GetNodeContentTemplate() string {
	if x != nil {
		return x.NodeContentTemplate
	}
	return ""
}

func (x *ActionDisplayConfig) GetStatusViewConfigs() []*StatusViewConfig {
	if x != nil {
		return x.StatusViewConfigs
	}
	return nil
}

type ActionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId                string               `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty" bson:"_id"`
	Name               string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type               ActionType           `protobuf:"varint,3,opt,name=type,proto3,enum=models.ActionType" json:"type,omitempty" bson:"type"`
	Source             ActionSource         `protobuf:"varint,4,opt,name=source,proto3,enum=models.ActionSource" json:"source,omitempty" bson:"source"`
	ProjectId          string               `protobuf:"bytes,5,opt,name=projectId,proto3" json:"projectId,omitempty" bson:"projectId"`
	Image              string               `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty" bson:"image"`
	ServiceName        string               `protobuf:"bytes,7,opt,name=serviceName,proto3" json:"serviceName,omitempty" bson:"serviceName"`
	DisplayName        string               `protobuf:"bytes,8,opt,name=displayName,proto3" json:"displayName,omitempty" bson:"displayName"`
	Executor           string               `protobuf:"bytes,9,opt,name=executor,proto3" json:"executor,omitempty" bson:"executor"`
	Path               string               `protobuf:"bytes,10,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
	Func               string               `protobuf:"bytes,11,opt,name=func,proto3" json:"func,omitempty" bson:"func"`
	BatchFunc          string               `protobuf:"bytes,12,opt,name=batchFunc,proto3" json:"batchFunc,omitempty" bson:"batchFunc"`
	Class              string               `protobuf:"bytes,13,opt,name=class,proto3" json:"class,omitempty" bson:"class"`
	Inputs             []*Parameter         `protobuf:"bytes,14,rep,name=inputs,proto3" json:"inputs,omitempty" bson:"inputs"`
	Outputs            []*Parameter         `protobuf:"bytes,15,rep,name=outputs,proto3" json:"outputs,omitempty" bson:"outputs"`
	SubActions         []*SubAction         `protobuf:"bytes,16,rep,name=subActions,proto3" json:"subActions,omitempty" bson:"subActions"`
	Options            []*ActionOption      `protobuf:"bytes,17,rep,name=options,proto3" json:"options,omitempty" bson:"options"`
	CallMode           CallMode             `protobuf:"varint,18,opt,name=callMode,proto3,enum=models.CallMode" json:"callMode,omitempty" bson:"callMode"`
	Lang               string               `protobuf:"bytes,19,opt,name=lang,proto3" json:"lang,omitempty" bson:"lang"`
	Code               string               `protobuf:"bytes,20,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Timeout            int64                `protobuf:"varint,21,opt,name=timeout,proto3" json:"timeout,omitempty" bson:"timeout"`
	Readme             string               `protobuf:"bytes,22,opt,name=readme,proto3" json:"readme,omitempty" bson:"readme"`
	Extra              map[string]string    `protobuf:"bytes,23,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extra"`
	Engine             string               `protobuf:"bytes,24,opt,name=engine,proto3" json:"engine,omitempty" bson:"engine"`
	ActionSelector     *ActionSelector      `protobuf:"bytes,25,opt,name=actionSelector,proto3" json:"actionSelector,omitempty" bson:"actionSelector"`
	DisplayConfig      *ActionDisplayConfig `protobuf:"bytes,26,opt,name=displayConfig,proto3" json:"displayConfig,omitempty" bson:"displayConfig"`
	EngineExtraOptions []*ActionOption      `protobuf:"bytes,27,rep,name=engineExtraOptions,proto3" json:"engineExtraOptions,omitempty" bson:"engineExtraOptions"`
	RuntimeConfig      *RuntimeConfig       `protobuf:"bytes,28,opt,name=runtimeConfig,proto3" json:"runtimeConfig,omitempty" bson:"runtimeConfig"`
	TestCases          []*TestCase          `protobuf:"bytes,29,rep,name=testCases,proto3" json:"testCases,omitempty" bson:"testCases"`
	Tags               []string             `protobuf:"bytes,30,rep,name=tags,proto3" json:"tags,omitempty" bson:"tags"`
	Icon               string               `protobuf:"bytes,31,opt,name=icon,proto3" json:"icon,omitempty" bson:"icon"`
	Description        string               `protobuf:"bytes,32,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	CreatedBy          string               `protobuf:"bytes,33,opt,name=createdBy,proto3" json:"createdBy,omitempty" bson:"createdBy"`
	IsPublic           bool                 `protobuf:"varint,34,opt,name=isPublic,proto3" json:"isPublic,omitempty" bson:"isPublic"`
	CreatedTime        int64                `protobuf:"varint,35,opt,name=createdTime,proto3" json:"createdTime,omitempty" bson:"createdTime"`
	UpdatedTime        int64                `protobuf:"varint,36,opt,name=updatedTime,proto3" json:"updatedTime,omitempty" bson:"updatedTime"`
	ExecutorInfo       *ActionInfo          `protobuf:"bytes,37,opt,name=ExecutorInfo,proto3" json:"ExecutorInfo,omitempty" bson:"executorInfo"`
	InnerActionInfo    *ActionInfo          `protobuf:"bytes,38,opt,name=InnerActionInfo,proto3" json:"InnerActionInfo,omitempty" bson:"innerActionInfo"`
	EngineInfo         *ActionInfo          `protobuf:"bytes,39,opt,name=EngineInfo,proto3" json:"EngineInfo,omitempty" bson:"engineInfo"`
}

func (x *ActionInfo) Reset() {
	*x = ActionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_action_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionInfo) ProtoMessage() {}

func (x *ActionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_action_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionInfo.ProtoReflect.Descriptor instead.
func (*ActionInfo) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_action_proto_rawDescGZIP(), []int{7}
}

func (x *ActionInfo) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *ActionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionInfo) GetType() ActionType {
	if x != nil {
		return x.Type
	}
	return ActionType_ServiceAction
}

func (x *ActionInfo) GetSource() ActionSource {
	if x != nil {
		return x.Source
	}
	return ActionSource_FromProject
}

func (x *ActionInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ActionInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ActionInfo) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ActionInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ActionInfo) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *ActionInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ActionInfo) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *ActionInfo) GetBatchFunc() string {
	if x != nil {
		return x.BatchFunc
	}
	return ""
}

func (x *ActionInfo) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *ActionInfo) GetInputs() []*Parameter {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ActionInfo) GetOutputs() []*Parameter {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ActionInfo) GetSubActions() []*SubAction {
	if x != nil {
		return x.SubActions
	}
	return nil
}

func (x *ActionInfo) GetOptions() []*ActionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ActionInfo) GetCallMode() CallMode {
	if x != nil {
		return x.CallMode
	}
	return CallMode_OnceCall
}

func (x *ActionInfo) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ActionInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActionInfo) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ActionInfo) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *ActionInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *ActionInfo) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *ActionInfo) GetActionSelector() *ActionSelector {
	if x != nil {
		return x.ActionSelector
	}
	return nil
}

func (x *ActionInfo) GetDisplayConfig() *ActionDisplayConfig {
	if x != nil {
		return x.DisplayConfig
	}
	return nil
}

func (x *ActionInfo) GetEngineExtraOptions() []*ActionOption {
	if x != nil {
		return x.EngineExtraOptions
	}
	return nil
}

func (x *ActionInfo) GetRuntimeConfig() *RuntimeConfig {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

func (x *ActionInfo) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

func (x *ActionInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ActionInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ActionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActionInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ActionInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *ActionInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ActionInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *ActionInfo) GetExecutorInfo() *ActionInfo {
	if x != nil {
		return x.ExecutorInfo
	}
	return nil
}

func (x *ActionInfo) GetInnerActionInfo() *ActionInfo {
	if x != nil {
		return x.InnerActionInfo
	}
	return nil
}

func (x *ActionInfo) GetEngineInfo() *ActionInfo {
	if x != nil {
		return x.EngineInfo
	}
	return nil
}

var File_tiops_common_models_action_proto protoreflect.FileDescriptor

var file_tiops_common_models_action_proto_rawDesc = []byte{
	0x0a, 0x20, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x20, 0x74, 0x69, 0x6f, 0x70,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74, 0x69,
	0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60,
	0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x02, 0x0a, 0x09, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x28, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x6e,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x67, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x4c, 0x61, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30,
	0x0a, 0x13, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x46, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xfa, 0x0b, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x9a, 0x84, 0x9e, 0x03, 0x0a, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x75, 0x6e, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2b,
	0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x12, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0d,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x09,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0f, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xa4, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x2a, 0x5b, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x10, 0x07, 0x2a, 0x56, 0x0a, 0x08, 0x43, 0x61, 0x6c,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x44,
	0x75, 0x70, 0x6c, 0x65, 0x78, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x61, 0x6c, 0x6c, 0x10,
	0x03, 0x42, 0x2d, 0x0a, 0x16, 0x69, 0x6f, 0x2e, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5a, 0x13, 0x74, 0x69, 0x6f,
	0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tiops_common_models_action_proto_rawDescOnce sync.Once
	file_tiops_common_models_action_proto_rawDescData = file_tiops_common_models_action_proto_rawDesc
)

func file_tiops_common_models_action_proto_rawDescGZIP() []byte {
	file_tiops_common_models_action_proto_rawDescOnce.Do(func() {
		file_tiops_common_models_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiops_common_models_action_proto_rawDescData)
	})
	return file_tiops_common_models_action_proto_rawDescData
}

var file_tiops_common_models_action_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tiops_common_models_action_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tiops_common_models_action_proto_goTypes = []interface{}{
	(ActionType)(0),             // 0: models.ActionType
	(ActionSource)(0),           // 1: models.ActionSource
	(CallMode)(0),               // 2: models.CallMode
	(*ActionOptionItem)(nil),    // 3: models.ActionOptionItem
	(*ActionOption)(nil),        // 4: models.ActionOption
	(*TestCase)(nil),            // 5: models.TestCase
	(*SubAction)(nil),           // 6: models.SubAction
	(*ActionSelector)(nil),      // 7: models.ActionSelector
	(*StatusViewConfig)(nil),    // 8: models.StatusViewConfig
	(*ActionDisplayConfig)(nil), // 9: models.ActionDisplayConfig
	(*ActionInfo)(nil),          // 10: models.ActionInfo
	nil,                         // 11: models.TestCase.InputsEntry
	nil,                         // 12: models.TestCase.OutputsEntry
	nil,                         // 13: models.SubAction.InputsEntry
	nil,                         // 14: models.SubAction.OutputsEntry
	nil,                         // 15: models.ActionInfo.ExtraEntry
	(*Parameter)(nil),           // 16: models.Parameter
	(*RuntimeConfig)(nil),       // 17: models.RuntimeConfig
}
var file_tiops_common_models_action_proto_depIdxs = []int32{
	3,  // 0: models.ActionOption.options:type_name -> models.ActionOptionItem
	11, // 1: models.TestCase.inputs:type_name -> models.TestCase.InputsEntry
	12, // 2: models.TestCase.outputs:type_name -> models.TestCase.OutputsEntry
	13, // 3: models.SubAction.inputs:type_name -> models.SubAction.InputsEntry
	14, // 4: models.SubAction.outputs:type_name -> models.SubAction.OutputsEntry
	7,  // 5: models.SubAction.selector:type_name -> models.ActionSelector
	0,  // 6: models.ActionSelector.types:type_name -> models.ActionType
	8,  // 7: models.ActionDisplayConfig.statusViewConfigs:type_name -> models.StatusViewConfig
	0,  // 8: models.ActionInfo.type:type_name -> models.ActionType
	1,  // 9: models.ActionInfo.source:type_name -> models.ActionSource
	16, // 10: models.ActionInfo.inputs:type_name -> models.Parameter
	16, // 11: models.ActionInfo.outputs:type_name -> models.Parameter
	6,  // 12: models.ActionInfo.subActions:type_name -> models.SubAction
	4,  // 13: models.ActionInfo.options:type_name -> models.ActionOption
	2,  // 14: models.ActionInfo.callMode:type_name -> models.CallMode
	15, // 15: models.ActionInfo.extra:type_name -> models.ActionInfo.ExtraEntry
	7,  // 16: models.ActionInfo.actionSelector:type_name -> models.ActionSelector
	9,  // 17: models.ActionInfo.displayConfig:type_name -> models.ActionDisplayConfig
	4,  // 18: models.ActionInfo.engineExtraOptions:type_name -> models.ActionOption
	17, // 19: models.ActionInfo.runtimeConfig:type_name -> models.RuntimeConfig
	5,  // 20: models.ActionInfo.testCases:type_name -> models.TestCase
	10, // 21: models.ActionInfo.ExecutorInfo:type_name -> models.ActionInfo
	10, // 22: models.ActionInfo.InnerActionInfo:type_name -> models.ActionInfo
	10, // 23: models.ActionInfo.EngineInfo:type_name -> models.ActionInfo
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_tiops_common_models_action_proto_init() }
func file_tiops_common_models_action_proto_init() {
	if File_tiops_common_models_action_proto != nil {
		return
	}
	file_tiops_common_models_common_proto_init()
	file_tiops_common_models_tagger_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tiops_common_models_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionOptionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusViewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDisplayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_action_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiops_common_models_action_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tiops_common_models_action_proto_goTypes,
		DependencyIndexes: file_tiops_common_models_action_proto_depIdxs,
		EnumInfos:         file_tiops_common_models_action_proto_enumTypes,
		MessageInfos:      file_tiops_common_models_action_proto_msgTypes,
	}.Build()
	File_tiops_common_models_action_proto = out.File
	file_tiops_common_models_action_proto_rawDesc = nil
	file_tiops_common_models_action_proto_goTypes = nil
	file_tiops_common_models_action_proto_depIdxs = nil
}
