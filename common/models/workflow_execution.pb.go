// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tiops/common/models/workflow_execution.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowExecutionStatus int32

const (
	WorkflowExecutionStatus_Created   WorkflowExecutionStatus = 0
	WorkflowExecutionStatus_Queuing   WorkflowExecutionStatus = 1
	WorkflowExecutionStatus_Running   WorkflowExecutionStatus = 2
	WorkflowExecutionStatus_Succeeded WorkflowExecutionStatus = 3
	WorkflowExecutionStatus_Failed    WorkflowExecutionStatus = 4
	WorkflowExecutionStatus_Stopped   WorkflowExecutionStatus = 5
	WorkflowExecutionStatus_Abort     WorkflowExecutionStatus = 6
)

var WorkflowExecutionStatus_name = map[int32]string{
	0: "Created",
	1: "Queuing",
	2: "Running",
	3: "Succeeded",
	4: "Failed",
	5: "Stopped",
	6: "Abort",
}

var WorkflowExecutionStatus_value = map[string]int32{
	"Created":   0,
	"Queuing":   1,
	"Running":   2,
	"Succeeded": 3,
	"Failed":    4,
	"Stopped":   5,
	"Abort":     6,
}

func (x WorkflowExecutionStatus) String() string {
	return proto.EnumName(WorkflowExecutionStatus_name, int32(x))
}

func (WorkflowExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_92c751892b2fc7a3, []int{0}
}

type WorkflowExecution struct {
	XId                  string                  `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty" bson:"_id"`
	JobId                string                  `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty" bson:"jobId"`
	WorkflowId           string                  `protobuf:"bytes,3,opt,name=workflowId,proto3" json:"workflowId,omitempty" bson:"workflowId"`
	LogId                string                  `protobuf:"bytes,4,opt,name=logId,proto3" json:"logId,omitempty" bson:"logId"`
	CreatedBy            string                  `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty" bson:"createdBy"`
	CreatedTime          int64                   `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty" bson:"createdTime"`
	StartTime            int64                   `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty" bson:"startTime"`
	EndTime              int64                   `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty" bson:"endTime"`
	Status               WorkflowExecutionStatus `protobuf:"varint,9,opt,name=status,proto3,enum=models.WorkflowExecutionStatus" json:"status,omitempty" bson:"status"`
	Workspace            string                  `protobuf:"bytes,10,opt,name=workspace,proto3" json:"workspace,omitempty" bson:"workspace"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *WorkflowExecution) Reset()         { *m = WorkflowExecution{} }
func (m *WorkflowExecution) String() string { return proto.CompactTextString(m) }
func (*WorkflowExecution) ProtoMessage()    {}
func (*WorkflowExecution) Descriptor() ([]byte, []int) {
	return fileDescriptor_92c751892b2fc7a3, []int{0}
}
func (m *WorkflowExecution) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WorkflowExecution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WorkflowExecution.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WorkflowExecution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowExecution.Merge(m, src)
}
func (m *WorkflowExecution) XXX_Size() int {
	return m.Size()
}
func (m *WorkflowExecution) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowExecution.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowExecution proto.InternalMessageInfo

func (m *WorkflowExecution) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *WorkflowExecution) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *WorkflowExecution) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowExecution) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *WorkflowExecution) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *WorkflowExecution) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *WorkflowExecution) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *WorkflowExecution) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *WorkflowExecution) GetStatus() WorkflowExecutionStatus {
	if m != nil {
		return m.Status
	}
	return WorkflowExecutionStatus_Created
}

func (m *WorkflowExecution) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func init() {
	proto.RegisterEnum("models.WorkflowExecutionStatus", WorkflowExecutionStatus_name, WorkflowExecutionStatus_value)
	proto.RegisterType((*WorkflowExecution)(nil), "models.WorkflowExecution")
}

func init() {
	proto.RegisterFile("tiops/common/models/workflow_execution.proto", fileDescriptor_92c751892b2fc7a3)
}

var fileDescriptor_92c751892b2fc7a3 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x0a, 0xd3, 0x30,
	0x1c, 0xc6, 0x97, 0x76, 0xed, 0xec, 0x7f, 0xa8, 0x35, 0x88, 0x06, 0x91, 0x5a, 0x76, 0x2a, 0x22,
	0x1d, 0xe8, 0x41, 0xf0, 0xe6, 0x44, 0xa1, 0x47, 0x3b, 0xc1, 0xe3, 0x68, 0x9b, 0x58, 0xa2, 0x6d,
	0x53, 0x9a, 0x94, 0xe9, 0xdd, 0x87, 0x10, 0x0f, 0x3e, 0x8f, 0xc7, 0x3d, 0x82, 0xcc, 0x17, 0x91,
	0x24, 0x9d, 0x1b, 0x38, 0x8f, 0xdf, 0xf7, 0xfd, 0xbe, 0xfe, 0xff, 0x49, 0x0a, 0x4f, 0x14, 0x17,
	0xbd, 0x5c, 0x57, 0xa2, 0x6d, 0x45, 0xb7, 0x6e, 0x05, 0x65, 0x8d, 0x5c, 0xef, 0xc5, 0xf0, 0xe9,
	0x43, 0x23, 0xf6, 0x3b, 0xf6, 0x99, 0x55, 0xa3, 0xe2, 0xa2, 0x4b, 0xfb, 0x41, 0x28, 0x81, 0x7d,
	0x0b, 0x3c, 0x88, 0xaf, 0xb5, 0xac, 0xb2, 0xe4, 0x75, 0x42, 0x15, 0x75, 0xcd, 0x06, 0x4b, 0xac,
	0x0e, 0x0e, 0xdc, 0x79, 0x3f, 0x0d, 0x7a, 0x7d, 0x9a, 0x83, 0x63, 0x70, 0x77, 0x9c, 0x12, 0x14,
	0xa3, 0x24, 0xd8, 0xdc, 0xfe, 0xfe, 0xf5, 0x87, 0x0b, 0xa5, 0x14, 0xdd, 0x8b, 0xd5, 0x8e, 0xd3,
	0x55, 0xee, 0x64, 0x14, 0xdf, 0x05, 0xef, 0xa3, 0x28, 0x33, 0x4a, 0x1c, 0xcd, 0xe4, 0x56, 0xe0,
	0x08, 0xe0, 0xb4, 0x75, 0x46, 0x89, 0x6b, 0xa2, 0x0b, 0x47, 0xb7, 0x1a, 0x51, 0x67, 0x94, 0xcc,
	0x6d, 0xcb, 0x08, 0xfc, 0x10, 0x82, 0x6a, 0x60, 0x85, 0x62, 0x74, 0xf3, 0x85, 0x78, 0x26, 0x39,
	0x1b, 0x38, 0x86, 0xe5, 0x24, 0xde, 0xf1, 0x96, 0x11, 0x3f, 0x46, 0x89, 0x9b, 0x5f, 0x5a, 0xba,
	0x2f, 0x55, 0x31, 0x28, 0x93, 0x2f, 0x4c, 0x7e, 0x36, 0x30, 0x81, 0x05, 0xeb, 0x6c, 0xf7, 0x86,
	0xc9, 0x4e, 0x12, 0x3f, 0x07, 0x5f, 0xaa, 0x42, 0x8d, 0x92, 0x04, 0x31, 0x4a, 0x6e, 0x3d, 0x7d,
	0x94, 0xda, 0x1b, 0x4a, 0xff, 0xb9, 0x90, 0xad, 0xc1, 0xf2, 0x09, 0xd7, 0x03, 0xf5, 0xa1, 0x64,
	0x5f, 0x54, 0x8c, 0x80, 0x5d, 0xf8, 0xaf, 0xf1, 0x58, 0xc2, 0xfd, 0xff, 0x7c, 0x00, 0x2f, 0x61,
	0xf1, 0xca, 0x2e, 0x1e, 0xce, 0xb4, 0x78, 0x3b, 0xb2, 0x91, 0x77, 0x75, 0x88, 0xb4, 0xc8, 0xc7,
	0xae, 0xd3, 0xc2, 0xc1, 0x37, 0x21, 0xd8, 0x8e, 0x55, 0xc5, 0x18, 0x65, 0x34, 0x74, 0x31, 0x80,
	0xff, 0xa6, 0xe0, 0x0d, 0xa3, 0xe1, 0x5c, 0x73, 0x5b, 0x25, 0xfa, 0x9e, 0xd1, 0xd0, 0xc3, 0x01,
	0x78, 0x2f, 0x4b, 0x31, 0xa8, 0xd0, 0xdf, 0x24, 0x3f, 0x8f, 0x11, 0x3a, 0x1c, 0x23, 0xf4, 0xeb,
	0x18, 0xa1, 0x6f, 0xbf, 0xa3, 0x19, 0xdc, 0xe3, 0x22, 0x35, 0xcf, 0x9f, 0x4e, 0xbf, 0x84, 0x3d,
	0x5c, 0xe9, 0x9b, 0x87, 0x7f, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xb6, 0xa8, 0xc7, 0x74,
	0x02, 0x00, 0x00,
}

func (m *WorkflowExecution) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WorkflowExecution) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WorkflowExecution) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Workspace) > 0 {
		i -= len(m.Workspace)
		copy(dAtA[i:], m.Workspace)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.Workspace)))
		i--
		dAtA[i] = 0x52
	}
	if m.Status != 0 {
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x48
	}
	if m.EndTime != 0 {
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(m.EndTime))
		i--
		dAtA[i] = 0x40
	}
	if m.StartTime != 0 {
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(m.StartTime))
		i--
		dAtA[i] = 0x38
	}
	if m.CreatedTime != 0 {
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(m.CreatedTime))
		i--
		dAtA[i] = 0x30
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.LogId) > 0 {
		i -= len(m.LogId)
		copy(dAtA[i:], m.LogId)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.LogId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WorkflowId) > 0 {
		i -= len(m.WorkflowId)
		copy(dAtA[i:], m.WorkflowId)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.WorkflowId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.XId) > 0 {
		i -= len(m.XId)
		copy(dAtA[i:], m.XId)
		i = encodeVarintWorkflowExecution(dAtA, i, uint64(len(m.XId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintWorkflowExecution(dAtA []byte, offset int, v uint64) int {
	offset -= sovWorkflowExecution(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WorkflowExecution) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.XId)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	l = len(m.WorkflowId)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	l = len(m.LogId)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	if m.CreatedTime != 0 {
		n += 1 + sovWorkflowExecution(uint64(m.CreatedTime))
	}
	if m.StartTime != 0 {
		n += 1 + sovWorkflowExecution(uint64(m.StartTime))
	}
	if m.EndTime != 0 {
		n += 1 + sovWorkflowExecution(uint64(m.EndTime))
	}
	if m.Status != 0 {
		n += 1 + sovWorkflowExecution(uint64(m.Status))
	}
	l = len(m.Workspace)
	if l > 0 {
		n += 1 + l + sovWorkflowExecution(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovWorkflowExecution(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWorkflowExecution(x uint64) (n int) {
	return sovWorkflowExecution(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WorkflowExecution) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWorkflowExecution
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WorkflowExecution: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WorkflowExecution: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field XId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkflowId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkflowId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LogId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedTime", wireType)
			}
			m.CreatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			m.StartTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= WorkflowExecutionStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workspace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Workspace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWorkflowExecution(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWorkflowExecution
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWorkflowExecution(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWorkflowExecution
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWorkflowExecution
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWorkflowExecution
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWorkflowExecution
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWorkflowExecution
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWorkflowExecution        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWorkflowExecution          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWorkflowExecution = fmt.Errorf("proto: unexpected end of group")
)
