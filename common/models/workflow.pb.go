// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.2
// source: tiops/common/models/workflow.proto

package models

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WorkflowType int32

const (
	WorkflowType_BasicFlow  WorkflowType = 0
	WorkflowType_ActionFlow WorkflowType = 1
	WorkflowType_CustomFlow WorkflowType = 2
)

// Enum value maps for WorkflowType.
var (
	WorkflowType_name = map[int32]string{
		0: "BasicFlow",
		1: "ActionFlow",
		2: "CustomFlow",
	}
	WorkflowType_value = map[string]int32{
		"BasicFlow":  0,
		"ActionFlow": 1,
		"CustomFlow": 2,
	}
)

func (x WorkflowType) Enum() *WorkflowType {
	p := new(WorkflowType)
	*p = x
	return p
}

func (x WorkflowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowType) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_models_workflow_proto_enumTypes[0].Descriptor()
}

func (WorkflowType) Type() protoreflect.EnumType {
	return &file_tiops_common_models_workflow_proto_enumTypes[0]
}

func (x WorkflowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowType.Descriptor instead.
func (WorkflowType) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{0}
}

type WorkflowResourceManager int32

const (
	WorkflowResourceManager_DefaultManager WorkflowResourceManager = 0
	WorkflowResourceManager_CustomManager  WorkflowResourceManager = 9
)

// Enum value maps for WorkflowResourceManager.
var (
	WorkflowResourceManager_name = map[int32]string{
		0: "DefaultManager",
		9: "CustomManager",
	}
	WorkflowResourceManager_value = map[string]int32{
		"DefaultManager": 0,
		"CustomManager":  9,
	}
)

func (x WorkflowResourceManager) Enum() *WorkflowResourceManager {
	p := new(WorkflowResourceManager)
	*p = x
	return p
}

func (x WorkflowResourceManager) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowResourceManager) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_models_workflow_proto_enumTypes[1].Descriptor()
}

func (WorkflowResourceManager) Type() protoreflect.EnumType {
	return &file_tiops_common_models_workflow_proto_enumTypes[1]
}

func (x WorkflowResourceManager) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowResourceManager.Descriptor instead.
func (WorkflowResourceManager) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{1}
}

type InputInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty" bson:"nodeId"`
	OutputName string `protobuf:"bytes,2,opt,name=outputName,proto3" json:"outputName,omitempty" bson:"outputName"`
}

func (x *InputInfo) Reset() {
	*x = InputInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputInfo) ProtoMessage() {}

func (x *InputInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputInfo.ProtoReflect.Descriptor instead.
func (*InputInfo) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *InputInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *InputInfo) GetOutputName() string {
	if x != nil {
		return x.OutputName
	}
	return ""
}

type WorkflowConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputInfos []*InputInfo `protobuf:"bytes,1,rep,name=inputInfos,proto3" json:"inputInfos,omitempty" bson:"inputInfos"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type       string       `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
}

func (x *WorkflowConnections) Reset() {
	*x = WorkflowConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowConnections) ProtoMessage() {}

func (x *WorkflowConnections) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowConnections.ProtoReflect.Descriptor instead.
func (*WorkflowConnections) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowConnections) GetInputInfos() []*InputInfo {
	if x != nil {
		return x.InputInfos
	}
	return nil
}

func (x *WorkflowConnections) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowConnections) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WorkflowNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	ActionId           string                          `protobuf:"bytes,2,opt,name=actionId,proto3" json:"actionId,omitempty" bson:"actionId"`
	ProjectId          string                          `protobuf:"bytes,3,opt,name=projectId,proto3" json:"projectId,omitempty" bson:"projectId"`
	ActionName         string                          `protobuf:"bytes,4,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
	ActionExecutor     string                          `protobuf:"bytes,5,opt,name=actionExecutor,proto3" json:"actionExecutor,omitempty" bson:"actionExecutor"`
	Inputs             map[string]*WorkflowConnections `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"inputs"`
	ActionOptions      map[string]string               `protobuf:"bytes,7,rep,name=actionOptions,proto3" json:"actionOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"actionOptions"`
	SubActions         map[string]*WorkflowConnections `protobuf:"bytes,8,rep,name=subActions,proto3" json:"subActions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"subActions"`
	StandAlone         bool                            `protobuf:"varint,9,opt,name=standAlone,proto3" json:"standAlone,omitempty" bson:"standAlone"`
	EngineExtraOptions map[string]string               `protobuf:"bytes,10,rep,name=engineExtraOptions,proto3" json:"engineExtraOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"engineExtraOptions"`
}

func (x *WorkflowNodeInfo) Reset() {
	*x = WorkflowNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowNodeInfo) ProtoMessage() {}

func (x *WorkflowNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowNodeInfo.ProtoReflect.Descriptor instead.
func (*WorkflowNodeInfo) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *WorkflowNodeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowNodeInfo) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *WorkflowNodeInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkflowNodeInfo) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *WorkflowNodeInfo) GetActionExecutor() string {
	if x != nil {
		return x.ActionExecutor
	}
	return ""
}

func (x *WorkflowNodeInfo) GetInputs() map[string]*WorkflowConnections {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowNodeInfo) GetActionOptions() map[string]string {
	if x != nil {
		return x.ActionOptions
	}
	return nil
}

func (x *WorkflowNodeInfo) GetSubActions() map[string]*WorkflowConnections {
	if x != nil {
		return x.SubActions
	}
	return nil
}

func (x *WorkflowNodeInfo) GetStandAlone() bool {
	if x != nil {
		return x.StandAlone
	}
	return false
}

func (x *WorkflowNodeInfo) GetEngineExtraOptions() map[string]string {
	if x != nil {
		return x.EngineExtraOptions
	}
	return nil
}

type WorkflowGraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	Name               string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Action             string            `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty" bson:"action"`
	ActionId           string            `protobuf:"bytes,5,opt,name=actionId,proto3" json:"actionId,omitempty" bson:"actionId"`
	ActionName         string            `protobuf:"bytes,6,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
	ProjectId          string            `protobuf:"bytes,7,opt,name=projectId,proto3" json:"projectId,omitempty" bson:"projectId"`
	ActionExecutor     string            `protobuf:"bytes,8,opt,name=actionExecutor,proto3" json:"actionExecutor,omitempty" bson:"actionExecutor"`
	Inputs             []*Parameter      `protobuf:"bytes,9,rep,name=inputs,proto3" json:"inputs,omitempty" bson:"inputs"`
	Outputs            []*Parameter      `protobuf:"bytes,10,rep,name=outputs,proto3" json:"outputs,omitempty" bson:"outputs"`
	ActionOptions      map[string]string `protobuf:"bytes,11,rep,name=actionOptions,proto3" json:"actionOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"actionOptions"`
	SubActions         []*SubAction      `protobuf:"bytes,12,rep,name=subActions,proto3" json:"subActions,omitempty" bson:"subActions"`
	X                  float32           `protobuf:"fixed32,13,opt,name=x,proto3" json:"x,omitempty" bson:"x"`
	Y                  float32           `protobuf:"fixed32,14,opt,name=y,proto3" json:"y,omitempty" bson:"y"`
	EngineExtraOptions map[string]string `protobuf:"bytes,15,rep,name=engineExtraOptions,proto3" json:"engineExtraOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"engineExtraOptions"`
}

func (x *WorkflowGraphNode) Reset() {
	*x = WorkflowGraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowGraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowGraphNode) ProtoMessage() {}

func (x *WorkflowGraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowGraphNode.ProtoReflect.Descriptor instead.
func (*WorkflowGraphNode) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowGraphNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowGraphNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowGraphNode) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *WorkflowGraphNode) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *WorkflowGraphNode) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *WorkflowGraphNode) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkflowGraphNode) GetActionExecutor() string {
	if x != nil {
		return x.ActionExecutor
	}
	return ""
}

func (x *WorkflowGraphNode) GetInputs() []*Parameter {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowGraphNode) GetOutputs() []*Parameter {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WorkflowGraphNode) GetActionOptions() map[string]string {
	if x != nil {
		return x.ActionOptions
	}
	return nil
}

func (x *WorkflowGraphNode) GetSubActions() []*SubAction {
	if x != nil {
		return x.SubActions
	}
	return nil
}

func (x *WorkflowGraphNode) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WorkflowGraphNode) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WorkflowGraphNode) GetEngineExtraOptions() map[string]string {
	if x != nil {
		return x.EngineExtraOptions
	}
	return nil
}

type VariableNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type      string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Value     string  `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
	ValueType string  `protobuf:"bytes,5,opt,name=valueType,proto3" json:"valueType,omitempty" bson:"valueType"`
	X         float32 `protobuf:"fixed32,6,opt,name=x,proto3" json:"x,omitempty" bson:"x"`
	Y         float32 `protobuf:"fixed32,7,opt,name=y,proto3" json:"y,omitempty" bson:"y"`
}

func (x *VariableNode) Reset() {
	*x = VariableNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableNode) ProtoMessage() {}

func (x *VariableNode) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableNode.ProtoReflect.Descriptor instead.
func (*VariableNode) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *VariableNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VariableNode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VariableNode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VariableNode) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *VariableNode) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *VariableNode) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type WorkflowGraphConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceNode string `protobuf:"bytes,1,opt,name=sourceNode,proto3" json:"sourceNode,omitempty" bson:"sourceNode"`
	TargetNode string `protobuf:"bytes,2,opt,name=targetNode,proto3" json:"targetNode,omitempty" bson:"targetNode"`
	InputName  string `protobuf:"bytes,3,opt,name=inputName,proto3" json:"inputName,omitempty" bson:"inputName"`
	OutputName string `protobuf:"bytes,4,opt,name=outputName,proto3" json:"outputName,omitempty" bson:"outputName"`
	Type       string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
}

func (x *WorkflowGraphConnection) Reset() {
	*x = WorkflowGraphConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowGraphConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowGraphConnection) ProtoMessage() {}

func (x *WorkflowGraphConnection) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowGraphConnection.ProtoReflect.Descriptor instead.
func (*WorkflowGraphConnection) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowGraphConnection) GetSourceNode() string {
	if x != nil {
		return x.SourceNode
	}
	return ""
}

func (x *WorkflowGraphConnection) GetTargetNode() string {
	if x != nil {
		return x.TargetNode
	}
	return ""
}

func (x *WorkflowGraphConnection) GetInputName() string {
	if x != nil {
		return x.InputName
	}
	return ""
}

func (x *WorkflowGraphConnection) GetOutputName() string {
	if x != nil {
		return x.OutputName
	}
	return ""
}

func (x *WorkflowGraphConnection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WorkflowGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes         []*WorkflowGraphNode       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" bson:"nodes"`
	Connections   []*WorkflowGraphConnection `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty" bson:"connections"`
	InputNode     *WorkflowGraphNode         `protobuf:"bytes,3,opt,name=inputNode,proto3" json:"inputNode,omitempty" bson:"inputNode"`
	OutputNode    *WorkflowGraphNode         `protobuf:"bytes,4,opt,name=outputNode,proto3" json:"outputNode,omitempty" bson:"outputNode"`
	VariableNodes []*VariableNode            `protobuf:"bytes,5,rep,name=variableNodes,proto3" json:"variableNodes,omitempty" bson:"variableNodes"`
}

func (x *WorkflowGraph) Reset() {
	*x = WorkflowGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowGraph) ProtoMessage() {}

func (x *WorkflowGraph) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowGraph.ProtoReflect.Descriptor instead.
func (*WorkflowGraph) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowGraph) GetNodes() []*WorkflowGraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *WorkflowGraph) GetConnections() []*WorkflowGraphConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *WorkflowGraph) GetInputNode() *WorkflowGraphNode {
	if x != nil {
		return x.InputNode
	}
	return nil
}

func (x *WorkflowGraph) GetOutputNode() *WorkflowGraphNode {
	if x != nil {
		return x.OutputNode
	}
	return nil
}

func (x *WorkflowGraph) GetVariableNodes() []*VariableNode {
	if x != nil {
		return x.VariableNodes
	}
	return nil
}

type WorkflowSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs    []*Parameter           `protobuf:"bytes,7,rep,name=inputs,proto3" json:"inputs,omitempty" bson:"inputs"`
	Outputs   []*WorkflowConnections `protobuf:"bytes,8,rep,name=outputs,proto3" json:"outputs,omitempty" bson:"outputs"`
	Variables []*Variable            `protobuf:"bytes,9,rep,name=variables,proto3" json:"variables,omitempty" bson:"variables"`
	Nodes     []*WorkflowNodeInfo    `protobuf:"bytes,10,rep,name=nodes,proto3" json:"nodes,omitempty" bson:"nodes"`
}

func (x *WorkflowSpec) Reset() {
	*x = WorkflowSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowSpec) ProtoMessage() {}

func (x *WorkflowSpec) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowSpec.ProtoReflect.Descriptor instead.
func (*WorkflowSpec) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowSpec) GetInputs() []*Parameter {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *WorkflowSpec) GetOutputs() []*WorkflowConnections {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WorkflowSpec) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *WorkflowSpec) GetNodes() []*WorkflowNodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type WorkflowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId             string                  `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty" bson:"_id"`
	Name            string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type            WorkflowType            `protobuf:"varint,3,opt,name=type,proto3,enum=models.WorkflowType" json:"type,omitempty" bson:"type"`
	Description     string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	CreatedBy       string                  `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty" bson:"createdBy"`
	CreatedTime     int64                   `protobuf:"varint,6,opt,name=createdTime,proto3" json:"createdTime,omitempty" bson:"createdTime"`
	UpdatedTime     int64                   `protobuf:"varint,7,opt,name=updatedTime,proto3" json:"updatedTime,omitempty" bson:"updatedTime"`
	Graph           *WorkflowGraph          `protobuf:"bytes,8,opt,name=graph,proto3" json:"graph,omitempty" bson:"graph"`
	Spec            *WorkflowSpec           `protobuf:"bytes,9,opt,name=spec,proto3" json:"spec,omitempty" bson:"spec"`
	Workspace       string                  `protobuf:"bytes,10,opt,name=workspace,proto3" json:"workspace,omitempty" bson:"workspace"`
	Engine          string                  `protobuf:"bytes,11,opt,name=engine,proto3" json:"engine,omitempty" bson:"engine"`
	EngineOptions   map[string]string       `protobuf:"bytes,12,rep,name=engineOptions,proto3" json:"engineOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"engineOptions"`
	ResourceManager WorkflowResourceManager `protobuf:"varint,13,opt,name=resourceManager,proto3,enum=models.WorkflowResourceManager" json:"resourceManager,omitempty" bson:"resourceManager"`
	EngineInfo      *ActionInfo             `protobuf:"bytes,14,opt,name=engineInfo,proto3" json:"engineInfo,omitempty" bson:"engineInfo"` //  ProjectInfo engineProjectInfo = 15;
}

func (x *WorkflowInfo) Reset() {
	*x = WorkflowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_models_workflow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInfo) ProtoMessage() {}

func (x *WorkflowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_models_workflow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInfo) Descriptor() ([]byte, []int) {
	return file_tiops_common_models_workflow_proto_rawDescGZIP(), []int{8}
}

func (x *WorkflowInfo) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *WorkflowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowInfo) GetType() WorkflowType {
	if x != nil {
		return x.Type
	}
	return WorkflowType_BasicFlow
}

func (x *WorkflowInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *WorkflowInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *WorkflowInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

func (x *WorkflowInfo) GetGraph() *WorkflowGraph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *WorkflowInfo) GetSpec() *WorkflowSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *WorkflowInfo) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *WorkflowInfo) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *WorkflowInfo) GetEngineOptions() map[string]string {
	if x != nil {
		return x.EngineOptions
	}
	return nil
}

func (x *WorkflowInfo) GetResourceManager() WorkflowResourceManager {
	if x != nil {
		return x.ResourceManager
	}
	return WorkflowResourceManager_DefaultManager
}

func (x *WorkflowInfo) GetEngineInfo() *ActionInfo {
	if x != nil {
		return x.EngineInfo
	}
	return nil
}

var File_tiops_common_models_workflow_proto protoreflect.FileDescriptor

var file_tiops_common_models_workflow_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x20, 0x74, 0x69,
	0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x06, 0x0a,
	0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x51, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x41, 0x6c, 0x6f, 0x6e, 0x65, 0x12, 0x60,
	0x0a, 0x12, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x56, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5a, 0x0a, 0x0f, 0x53, 0x75,
	0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x05,
	0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x61, 0x0a, 0x12,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x40, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x45, 0x0a, 0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x79, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xb3, 0x02, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x12, 0x2f, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x53, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x8f, 0x05, 0x0a, 0x0c, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x03, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x9a, 0x84, 0x9e, 0x03, 0x0a, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x40, 0x0a, 0x12, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x3d, 0x0a, 0x0c, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x02, 0x2a, 0x40, 0x0a, 0x17, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x09, 0x42, 0x2d, 0x0a, 0x16, 0x69,
	0x6f, 0x2e, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5a, 0x13, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tiops_common_models_workflow_proto_rawDescOnce sync.Once
	file_tiops_common_models_workflow_proto_rawDescData = file_tiops_common_models_workflow_proto_rawDesc
)

func file_tiops_common_models_workflow_proto_rawDescGZIP() []byte {
	file_tiops_common_models_workflow_proto_rawDescOnce.Do(func() {
		file_tiops_common_models_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiops_common_models_workflow_proto_rawDescData)
	})
	return file_tiops_common_models_workflow_proto_rawDescData
}

var file_tiops_common_models_workflow_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tiops_common_models_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_tiops_common_models_workflow_proto_goTypes = []interface{}{
	(WorkflowType)(0),               // 0: models.WorkflowType
	(WorkflowResourceManager)(0),    // 1: models.WorkflowResourceManager
	(*InputInfo)(nil),               // 2: models.InputInfo
	(*WorkflowConnections)(nil),     // 3: models.WorkflowConnections
	(*WorkflowNodeInfo)(nil),        // 4: models.WorkflowNodeInfo
	(*WorkflowGraphNode)(nil),       // 5: models.WorkflowGraphNode
	(*VariableNode)(nil),            // 6: models.VariableNode
	(*WorkflowGraphConnection)(nil), // 7: models.WorkflowGraphConnection
	(*WorkflowGraph)(nil),           // 8: models.WorkflowGraph
	(*WorkflowSpec)(nil),            // 9: models.WorkflowSpec
	(*WorkflowInfo)(nil),            // 10: models.WorkflowInfo
	nil,                             // 11: models.WorkflowNodeInfo.InputsEntry
	nil,                             // 12: models.WorkflowNodeInfo.ActionOptionsEntry
	nil,                             // 13: models.WorkflowNodeInfo.SubActionsEntry
	nil,                             // 14: models.WorkflowNodeInfo.EngineExtraOptionsEntry
	nil,                             // 15: models.WorkflowGraphNode.ActionOptionsEntry
	nil,                             // 16: models.WorkflowGraphNode.EngineExtraOptionsEntry
	nil,                             // 17: models.WorkflowInfo.EngineOptionsEntry
	(*Parameter)(nil),               // 18: models.Parameter
	(*SubAction)(nil),               // 19: models.SubAction
	(*Variable)(nil),                // 20: models.Variable
	(*ActionInfo)(nil),              // 21: models.ActionInfo
}
var file_tiops_common_models_workflow_proto_depIdxs = []int32{
	2,  // 0: models.WorkflowConnections.inputInfos:type_name -> models.InputInfo
	11, // 1: models.WorkflowNodeInfo.inputs:type_name -> models.WorkflowNodeInfo.InputsEntry
	12, // 2: models.WorkflowNodeInfo.actionOptions:type_name -> models.WorkflowNodeInfo.ActionOptionsEntry
	13, // 3: models.WorkflowNodeInfo.subActions:type_name -> models.WorkflowNodeInfo.SubActionsEntry
	14, // 4: models.WorkflowNodeInfo.engineExtraOptions:type_name -> models.WorkflowNodeInfo.EngineExtraOptionsEntry
	18, // 5: models.WorkflowGraphNode.inputs:type_name -> models.Parameter
	18, // 6: models.WorkflowGraphNode.outputs:type_name -> models.Parameter
	15, // 7: models.WorkflowGraphNode.actionOptions:type_name -> models.WorkflowGraphNode.ActionOptionsEntry
	19, // 8: models.WorkflowGraphNode.subActions:type_name -> models.SubAction
	16, // 9: models.WorkflowGraphNode.engineExtraOptions:type_name -> models.WorkflowGraphNode.EngineExtraOptionsEntry
	5,  // 10: models.WorkflowGraph.nodes:type_name -> models.WorkflowGraphNode
	7,  // 11: models.WorkflowGraph.connections:type_name -> models.WorkflowGraphConnection
	5,  // 12: models.WorkflowGraph.inputNode:type_name -> models.WorkflowGraphNode
	5,  // 13: models.WorkflowGraph.outputNode:type_name -> models.WorkflowGraphNode
	6,  // 14: models.WorkflowGraph.variableNodes:type_name -> models.VariableNode
	18, // 15: models.WorkflowSpec.inputs:type_name -> models.Parameter
	3,  // 16: models.WorkflowSpec.outputs:type_name -> models.WorkflowConnections
	20, // 17: models.WorkflowSpec.variables:type_name -> models.Variable
	4,  // 18: models.WorkflowSpec.nodes:type_name -> models.WorkflowNodeInfo
	0,  // 19: models.WorkflowInfo.type:type_name -> models.WorkflowType
	8,  // 20: models.WorkflowInfo.graph:type_name -> models.WorkflowGraph
	9,  // 21: models.WorkflowInfo.spec:type_name -> models.WorkflowSpec
	17, // 22: models.WorkflowInfo.engineOptions:type_name -> models.WorkflowInfo.EngineOptionsEntry
	1,  // 23: models.WorkflowInfo.resourceManager:type_name -> models.WorkflowResourceManager
	21, // 24: models.WorkflowInfo.engineInfo:type_name -> models.ActionInfo
	3,  // 25: models.WorkflowNodeInfo.InputsEntry.value:type_name -> models.WorkflowConnections
	3,  // 26: models.WorkflowNodeInfo.SubActionsEntry.value:type_name -> models.WorkflowConnections
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_tiops_common_models_workflow_proto_init() }
func file_tiops_common_models_workflow_proto_init() {
	if File_tiops_common_models_workflow_proto != nil {
		return
	}
	file_tiops_common_models_common_proto_init()
	file_tiops_common_models_tagger_proto_init()
	file_tiops_common_models_action_proto_init()
	file_tiops_common_models_project_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tiops_common_models_workflow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowGraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowGraphConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_models_workflow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiops_common_models_workflow_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tiops_common_models_workflow_proto_goTypes,
		DependencyIndexes: file_tiops_common_models_workflow_proto_depIdxs,
		EnumInfos:         file_tiops_common_models_workflow_proto_enumTypes,
		MessageInfos:      file_tiops_common_models_workflow_proto_msgTypes,
	}.Build()
	File_tiops_common_models_workflow_proto = out.File
	file_tiops_common_models_workflow_proto_rawDesc = nil
	file_tiops_common_models_workflow_proto_goTypes = nil
	file_tiops_common_models_workflow_proto_depIdxs = nil
}
