// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.2
// source: tiops/common/services/api.proto

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	models "tiops/common/models"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	Data    *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty" bson:"data"`
}

func (x *ObjectResponse) Reset() {
	*x = ObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectResponse) ProtoMessage() {}

func (x *ObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectResponse.ProtoReflect.Descriptor instead.
func (*ObjectResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ObjectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ObjectResponse) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	Data    []*anypb.Any `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" bson:"data"` //  oneof msg { Child1 c1 = 2; Child2 c2 = 3; }
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListResponse) GetData() []*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	Ids      []string          `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty" bson:"ids"`
	WaitTime int32             `protobuf:"varint,3,opt,name=waitTime,proto3" json:"waitTime,omitempty" bson:"waitTime"`
	Extra    map[string]string `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extra"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{2}
}

func (x *QueryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *QueryRequest) GetWaitTime() int32 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

func (x *QueryRequest) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type LogIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName string `protobuf:"bytes,1,opt,name=moduleName,proto3" json:"moduleName,omitempty" bson:"moduleName"`
}

func (x *LogIdRequest) Reset() {
	*x = LogIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIdRequest) ProtoMessage() {}

func (x *LogIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIdRequest.ProtoReflect.Descriptor instead.
func (*LogIdRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{3}
}

func (x *LogIdRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

type LogIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId int64 `protobuf:"varint,1,opt,name=logId,proto3" json:"logId,omitempty" bson:"logId"`
}

func (x *LogIdResponse) Reset() {
	*x = LogIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogIdResponse) ProtoMessage() {}

func (x *LogIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogIdResponse.ProtoReflect.Descriptor instead.
func (*LogIdResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{4}
}

func (x *LogIdResponse) GetLogId() int64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

type ActionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	List    []*models.ActionInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty" bson:"list"`
}

func (x *ActionListResponse) Reset() {
	*x = ActionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionListResponse) ProtoMessage() {}

func (x *ActionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionListResponse.ProtoReflect.Descriptor instead.
func (*ActionListResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{5}
}

func (x *ActionListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActionListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActionListResponse) GetList() []*models.ActionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ProjectListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	List    []*models.ProjectInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty" bson:"list"`
}

func (x *ProjectListResponse) Reset() {
	*x = ProjectListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListResponse) ProtoMessage() {}

func (x *ProjectListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListResponse.ProtoReflect.Descriptor instead.
func (*ProjectListResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProjectListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProjectListResponse) GetList() []*models.ProjectInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type SaveValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" bson:"key"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
}

func (x *SaveValueRequest) Reset() {
	*x = SaveValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveValueRequest) ProtoMessage() {}

func (x *SaveValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveValueRequest.ProtoReflect.Descriptor instead.
func (*SaveValueRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{7}
}

func (x *SaveValueRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SaveValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SaveValueRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type LoadValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty" bson:"key"`
}

func (x *LoadValueRequest) Reset() {
	*x = LoadValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadValueRequest) ProtoMessage() {}

func (x *LoadValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadValueRequest.ProtoReflect.Descriptor instead.
func (*LoadValueRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{8}
}

func (x *LoadValueRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LoadValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoadValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
}

func (x *LoadValueResponse) Reset() {
	*x = LoadValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadValueResponse) ProtoMessage() {}

func (x *LoadValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadValueResponse.ProtoReflect.Descriptor instead.
func (*LoadValueResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{9}
}

func (x *LoadValueResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoadValueResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type LoadAllValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
}

func (x *LoadAllValueRequest) Reset() {
	*x = LoadAllValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAllValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAllValueRequest) ProtoMessage() {}

func (x *LoadAllValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAllValueRequest.ProtoReflect.Descriptor instead.
func (*LoadAllValueRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{10}
}

func (x *LoadAllValueRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type LoadAllValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Data map[string][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"data"`
}

func (x *LoadAllValueResponse) Reset() {
	*x = LoadAllValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAllValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAllValueResponse) ProtoMessage() {}

func (x *LoadAllValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAllValueResponse.ProtoReflect.Descriptor instead.
func (*LoadAllValueResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{11}
}

func (x *LoadAllValueResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoadAllValueResponse) GetData() map[string][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SaveAllValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
	Data map[string][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"data"`
}

func (x *SaveAllValueRequest) Reset() {
	*x = SaveAllValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAllValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAllValueRequest) ProtoMessage() {}

func (x *SaveAllValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAllValueRequest.ProtoReflect.Descriptor instead.
func (*SaveAllValueRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{12}
}

func (x *SaveAllValueRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SaveAllValueRequest) GetData() map[string][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WatchEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workspace string `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty" bson:"workspace"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
}

func (x *WatchEventRequest) Reset() {
	*x = WatchEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchEventRequest) ProtoMessage() {}

func (x *WatchEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchEventRequest.ProtoReflect.Descriptor instead.
func (*WatchEventRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{13}
}

func (x *WatchEventRequest) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *WatchEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source    string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty" bson:"source"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty" bson:"workspace"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty" bson:"data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_api_proto_rawDescGZIP(), []int{14}
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Event) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_tiops_common_services_api_proto protoreflect.FileDescriptor

var file_tiops_common_services_api_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1d, 0x74, 0x69, 0x6f,
	0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x74, 0x69, 0x6f, 0x70,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x74, 0x69, 0x6f, 0x70, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x74,
	0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74, 0x69, 0x6f, 0x70, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x74, 0x69, 0x6f,
	0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x0e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x6a,
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x29, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xa1, 0x01, 0x0a,
	0x14, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9f, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x45, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0xe6, 0x0a, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4a, 0x6f, 0x62, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4a, 0x6f, 0x62, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x53, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x4c,
	0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x38, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1a, 0x0a, 0x18, 0x69, 0x6f, 0x2e,
	0x74, 0x69, 0x6f, 0x70, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tiops_common_services_api_proto_rawDescOnce sync.Once
	file_tiops_common_services_api_proto_rawDescData = file_tiops_common_services_api_proto_rawDesc
)

func file_tiops_common_services_api_proto_rawDescGZIP() []byte {
	file_tiops_common_services_api_proto_rawDescOnce.Do(func() {
		file_tiops_common_services_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiops_common_services_api_proto_rawDescData)
	})
	return file_tiops_common_services_api_proto_rawDescData
}

var file_tiops_common_services_api_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_tiops_common_services_api_proto_goTypes = []interface{}{
	(*ObjectResponse)(nil),           // 0: services.ObjectResponse
	(*ListResponse)(nil),             // 1: services.ListResponse
	(*QueryRequest)(nil),             // 2: services.QueryRequest
	(*LogIdRequest)(nil),             // 3: services.LogIdRequest
	(*LogIdResponse)(nil),            // 4: services.LogIdResponse
	(*ActionListResponse)(nil),       // 5: services.ActionListResponse
	(*ProjectListResponse)(nil),      // 6: services.ProjectListResponse
	(*SaveValueRequest)(nil),         // 7: services.SaveValueRequest
	(*LoadValueRequest)(nil),         // 8: services.LoadValueRequest
	(*LoadValueResponse)(nil),        // 9: services.LoadValueResponse
	(*LoadAllValueRequest)(nil),      // 10: services.LoadAllValueRequest
	(*LoadAllValueResponse)(nil),     // 11: services.LoadAllValueResponse
	(*SaveAllValueRequest)(nil),      // 12: services.SaveAllValueRequest
	(*WatchEventRequest)(nil),        // 13: services.WatchEventRequest
	(*Event)(nil),                    // 14: services.Event
	nil,                              // 15: services.QueryRequest.ExtraEntry
	nil,                              // 16: services.LoadAllValueResponse.DataEntry
	nil,                              // 17: services.SaveAllValueRequest.DataEntry
	(*anypb.Any)(nil),                // 18: google.protobuf.Any
	(*models.ActionInfo)(nil),        // 19: models.ActionInfo
	(*models.ProjectInfo)(nil),       // 20: models.ProjectInfo
	(*models.Log)(nil),               // 21: models.Log
	(*models.WorkflowExecution)(nil), // 22: models.WorkflowExecution
	(*models.ExecutionRecord)(nil),   // 23: models.ExecutionRecord
	(*models.ProcessRecord)(nil),     // 24: models.ProcessRecord
	(*models.WorkflowInfo)(nil),      // 25: models.WorkflowInfo
	(*models.WorkflowJob)(nil),       // 26: models.WorkflowJob
	(*StatusResponse)(nil),           // 27: services.StatusResponse
	(*models.WorkflowResources)(nil), // 28: models.WorkflowResources
}
var file_tiops_common_services_api_proto_depIdxs = []int32{
	18, // 0: services.ObjectResponse.data:type_name -> google.protobuf.Any
	18, // 1: services.ListResponse.data:type_name -> google.protobuf.Any
	15, // 2: services.QueryRequest.extra:type_name -> services.QueryRequest.ExtraEntry
	19, // 3: services.ActionListResponse.list:type_name -> models.ActionInfo
	20, // 4: services.ProjectListResponse.list:type_name -> models.ProjectInfo
	16, // 5: services.LoadAllValueResponse.data:type_name -> services.LoadAllValueResponse.DataEntry
	17, // 6: services.SaveAllValueRequest.data:type_name -> services.SaveAllValueRequest.DataEntry
	21, // 7: services.APIService.PostLog:input_type -> models.Log
	2,  // 8: services.APIService.GetProjectByID:input_type -> services.QueryRequest
	2,  // 9: services.APIService.GetWorkflowById:input_type -> services.QueryRequest
	3,  // 10: services.APIService.GetSystemLogId:input_type -> services.LogIdRequest
	2,  // 11: services.APIService.GetWorkflowJobById:input_type -> services.QueryRequest
	2,  // 12: services.APIService.GetActionById:input_type -> services.QueryRequest
	2,  // 13: services.APIService.GetActionListByIds:input_type -> services.QueryRequest
	2,  // 14: services.APIService.GetProjectList:input_type -> services.QueryRequest
	22, // 15: services.APIService.CreateOrUpdateWorkflowExecution:input_type -> models.WorkflowExecution
	23, // 16: services.APIService.CreateOrUpdateExecutionRecord:input_type -> models.ExecutionRecord
	24, // 17: services.APIService.AddProcessRecord:input_type -> models.ProcessRecord
	2,  // 18: services.APIService.GetWorkflowExecutionById:input_type -> services.QueryRequest
	2,  // 19: services.APIService.GetWorkflowRequiredResources:input_type -> services.QueryRequest
	7,  // 20: services.APIService.SaveValue:input_type -> services.SaveValueRequest
	8,  // 21: services.APIService.LoadValue:input_type -> services.LoadValueRequest
	12, // 22: services.APIService.SaveAllValue:input_type -> services.SaveAllValueRequest
	10, // 23: services.APIService.LoadAllValue:input_type -> services.LoadAllValueRequest
	13, // 24: services.APIService.WatchEvent:input_type -> services.WatchEventRequest
	14, // 25: services.APIService.PushEvent:input_type -> services.Event
	0,  // 26: services.APIService.PostLog:output_type -> services.ObjectResponse
	20, // 27: services.APIService.GetProjectByID:output_type -> models.ProjectInfo
	25, // 28: services.APIService.GetWorkflowById:output_type -> models.WorkflowInfo
	4,  // 29: services.APIService.GetSystemLogId:output_type -> services.LogIdResponse
	26, // 30: services.APIService.GetWorkflowJobById:output_type -> models.WorkflowJob
	19, // 31: services.APIService.GetActionById:output_type -> models.ActionInfo
	5,  // 32: services.APIService.GetActionListByIds:output_type -> services.ActionListResponse
	6,  // 33: services.APIService.GetProjectList:output_type -> services.ProjectListResponse
	27, // 34: services.APIService.CreateOrUpdateWorkflowExecution:output_type -> services.StatusResponse
	27, // 35: services.APIService.CreateOrUpdateExecutionRecord:output_type -> services.StatusResponse
	27, // 36: services.APIService.AddProcessRecord:output_type -> services.StatusResponse
	22, // 37: services.APIService.GetWorkflowExecutionById:output_type -> models.WorkflowExecution
	28, // 38: services.APIService.GetWorkflowRequiredResources:output_type -> models.WorkflowResources
	27, // 39: services.APIService.SaveValue:output_type -> services.StatusResponse
	9,  // 40: services.APIService.LoadValue:output_type -> services.LoadValueResponse
	27, // 41: services.APIService.SaveAllValue:output_type -> services.StatusResponse
	11, // 42: services.APIService.LoadAllValue:output_type -> services.LoadAllValueResponse
	14, // 43: services.APIService.WatchEvent:output_type -> services.Event
	27, // 44: services.APIService.PushEvent:output_type -> services.StatusResponse
	26, // [26:45] is the sub-list for method output_type
	7,  // [7:26] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_tiops_common_services_api_proto_init() }
func file_tiops_common_services_api_proto_init() {
	if File_tiops_common_services_api_proto != nil {
		return
	}
	file_tiops_common_services_response_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tiops_common_services_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAllValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAllValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAllValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiops_common_services_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tiops_common_services_api_proto_goTypes,
		DependencyIndexes: file_tiops_common_services_api_proto_depIdxs,
		MessageInfos:      file_tiops_common_services_api_proto_msgTypes,
	}.Build()
	File_tiops_common_services_api_proto = out.File
	file_tiops_common_services_api_proto_rawDesc = nil
	file_tiops_common_services_api_proto_goTypes = nil
	file_tiops_common_services_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIServiceClient is the client API for APIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIServiceClient interface {
	// define the interface and data type
	PostLog(ctx context.Context, in *models.Log, opts ...grpc.CallOption) (*ObjectResponse, error)
	GetProjectByID(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.ProjectInfo, error)
	//  rpc GetProjects(QueryRequest) returns(ListResponse){}
	GetWorkflowById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowInfo, error)
	GetSystemLogId(ctx context.Context, in *LogIdRequest, opts ...grpc.CallOption) (*LogIdResponse, error)
	GetWorkflowJobById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowJob, error)
	GetActionById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.ActionInfo, error)
	GetActionListByIds(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ActionListResponse, error)
	GetProjectList(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ProjectListResponse, error)
	CreateOrUpdateWorkflowExecution(ctx context.Context, in *models.WorkflowExecution, opts ...grpc.CallOption) (*StatusResponse, error)
	CreateOrUpdateExecutionRecord(ctx context.Context, in *models.ExecutionRecord, opts ...grpc.CallOption) (*StatusResponse, error)
	AddProcessRecord(ctx context.Context, in *models.ProcessRecord, opts ...grpc.CallOption) (*StatusResponse, error)
	GetWorkflowExecutionById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowExecution, error)
	GetWorkflowRequiredResources(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowResources, error)
	SaveValue(ctx context.Context, in *SaveValueRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	LoadValue(ctx context.Context, in *LoadValueRequest, opts ...grpc.CallOption) (*LoadValueResponse, error)
	SaveAllValue(ctx context.Context, in *SaveAllValueRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	LoadAllValue(ctx context.Context, in *LoadAllValueRequest, opts ...grpc.CallOption) (*LoadAllValueResponse, error)
	WatchEvent(ctx context.Context, in *WatchEventRequest, opts ...grpc.CallOption) (APIService_WatchEventClient, error)
	PushEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*StatusResponse, error)
}

type aPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIServiceClient(cc grpc.ClientConnInterface) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) PostLog(ctx context.Context, in *models.Log, opts ...grpc.CallOption) (*ObjectResponse, error) {
	out := new(ObjectResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/PostLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetProjectByID(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.ProjectInfo, error) {
	out := new(models.ProjectInfo)
	err := c.cc.Invoke(ctx, "/services.APIService/GetProjectByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetWorkflowById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowInfo, error) {
	out := new(models.WorkflowInfo)
	err := c.cc.Invoke(ctx, "/services.APIService/GetWorkflowById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetSystemLogId(ctx context.Context, in *LogIdRequest, opts ...grpc.CallOption) (*LogIdResponse, error) {
	out := new(LogIdResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/GetSystemLogId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetWorkflowJobById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowJob, error) {
	out := new(models.WorkflowJob)
	err := c.cc.Invoke(ctx, "/services.APIService/GetWorkflowJobById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetActionById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.ActionInfo, error) {
	out := new(models.ActionInfo)
	err := c.cc.Invoke(ctx, "/services.APIService/GetActionById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetActionListByIds(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ActionListResponse, error) {
	out := new(ActionListResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/GetActionListByIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetProjectList(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ProjectListResponse, error) {
	out := new(ProjectListResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/GetProjectList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) CreateOrUpdateWorkflowExecution(ctx context.Context, in *models.WorkflowExecution, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/CreateOrUpdateWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) CreateOrUpdateExecutionRecord(ctx context.Context, in *models.ExecutionRecord, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/CreateOrUpdateExecutionRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) AddProcessRecord(ctx context.Context, in *models.ProcessRecord, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/AddProcessRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetWorkflowExecutionById(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowExecution, error) {
	out := new(models.WorkflowExecution)
	err := c.cc.Invoke(ctx, "/services.APIService/GetWorkflowExecutionById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetWorkflowRequiredResources(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowResources, error) {
	out := new(models.WorkflowResources)
	err := c.cc.Invoke(ctx, "/services.APIService/GetWorkflowRequiredResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) SaveValue(ctx context.Context, in *SaveValueRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/SaveValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) LoadValue(ctx context.Context, in *LoadValueRequest, opts ...grpc.CallOption) (*LoadValueResponse, error) {
	out := new(LoadValueResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/LoadValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) SaveAllValue(ctx context.Context, in *SaveAllValueRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/SaveAllValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) LoadAllValue(ctx context.Context, in *LoadAllValueRequest, opts ...grpc.CallOption) (*LoadAllValueResponse, error) {
	out := new(LoadAllValueResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/LoadAllValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) WatchEvent(ctx context.Context, in *WatchEventRequest, opts ...grpc.CallOption) (APIService_WatchEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_APIService_serviceDesc.Streams[0], "/services.APIService/WatchEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServiceWatchEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type APIService_WatchEventClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type aPIServiceWatchEventClient struct {
	grpc.ClientStream
}

func (x *aPIServiceWatchEventClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIServiceClient) PushEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.APIService/PushEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServiceServer is the server API for APIService service.
type APIServiceServer interface {
	// define the interface and data type
	PostLog(context.Context, *models.Log) (*ObjectResponse, error)
	GetProjectByID(context.Context, *QueryRequest) (*models.ProjectInfo, error)
	//  rpc GetProjects(QueryRequest) returns(ListResponse){}
	GetWorkflowById(context.Context, *QueryRequest) (*models.WorkflowInfo, error)
	GetSystemLogId(context.Context, *LogIdRequest) (*LogIdResponse, error)
	GetWorkflowJobById(context.Context, *QueryRequest) (*models.WorkflowJob, error)
	GetActionById(context.Context, *QueryRequest) (*models.ActionInfo, error)
	GetActionListByIds(context.Context, *QueryRequest) (*ActionListResponse, error)
	GetProjectList(context.Context, *QueryRequest) (*ProjectListResponse, error)
	CreateOrUpdateWorkflowExecution(context.Context, *models.WorkflowExecution) (*StatusResponse, error)
	CreateOrUpdateExecutionRecord(context.Context, *models.ExecutionRecord) (*StatusResponse, error)
	AddProcessRecord(context.Context, *models.ProcessRecord) (*StatusResponse, error)
	GetWorkflowExecutionById(context.Context, *QueryRequest) (*models.WorkflowExecution, error)
	GetWorkflowRequiredResources(context.Context, *QueryRequest) (*models.WorkflowResources, error)
	SaveValue(context.Context, *SaveValueRequest) (*StatusResponse, error)
	LoadValue(context.Context, *LoadValueRequest) (*LoadValueResponse, error)
	SaveAllValue(context.Context, *SaveAllValueRequest) (*StatusResponse, error)
	LoadAllValue(context.Context, *LoadAllValueRequest) (*LoadAllValueResponse, error)
	WatchEvent(*WatchEventRequest, APIService_WatchEventServer) error
	PushEvent(context.Context, *Event) (*StatusResponse, error)
}

// UnimplementedAPIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServiceServer struct {
}

func (*UnimplementedAPIServiceServer) PostLog(context.Context, *models.Log) (*ObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostLog not implemented")
}
func (*UnimplementedAPIServiceServer) GetProjectByID(context.Context, *QueryRequest) (*models.ProjectInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectByID not implemented")
}
func (*UnimplementedAPIServiceServer) GetWorkflowById(context.Context, *QueryRequest) (*models.WorkflowInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowById not implemented")
}
func (*UnimplementedAPIServiceServer) GetSystemLogId(context.Context, *LogIdRequest) (*LogIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemLogId not implemented")
}
func (*UnimplementedAPIServiceServer) GetWorkflowJobById(context.Context, *QueryRequest) (*models.WorkflowJob, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowJobById not implemented")
}
func (*UnimplementedAPIServiceServer) GetActionById(context.Context, *QueryRequest) (*models.ActionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionById not implemented")
}
func (*UnimplementedAPIServiceServer) GetActionListByIds(context.Context, *QueryRequest) (*ActionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionListByIds not implemented")
}
func (*UnimplementedAPIServiceServer) GetProjectList(context.Context, *QueryRequest) (*ProjectListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectList not implemented")
}
func (*UnimplementedAPIServiceServer) CreateOrUpdateWorkflowExecution(context.Context, *models.WorkflowExecution) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrUpdateWorkflowExecution not implemented")
}
func (*UnimplementedAPIServiceServer) CreateOrUpdateExecutionRecord(context.Context, *models.ExecutionRecord) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrUpdateExecutionRecord not implemented")
}
func (*UnimplementedAPIServiceServer) AddProcessRecord(context.Context, *models.ProcessRecord) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProcessRecord not implemented")
}
func (*UnimplementedAPIServiceServer) GetWorkflowExecutionById(context.Context, *QueryRequest) (*models.WorkflowExecution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowExecutionById not implemented")
}
func (*UnimplementedAPIServiceServer) GetWorkflowRequiredResources(context.Context, *QueryRequest) (*models.WorkflowResources, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowRequiredResources not implemented")
}
func (*UnimplementedAPIServiceServer) SaveValue(context.Context, *SaveValueRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveValue not implemented")
}
func (*UnimplementedAPIServiceServer) LoadValue(context.Context, *LoadValueRequest) (*LoadValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadValue not implemented")
}
func (*UnimplementedAPIServiceServer) SaveAllValue(context.Context, *SaveAllValueRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveAllValue not implemented")
}
func (*UnimplementedAPIServiceServer) LoadAllValue(context.Context, *LoadAllValueRequest) (*LoadAllValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadAllValue not implemented")
}
func (*UnimplementedAPIServiceServer) WatchEvent(*WatchEventRequest, APIService_WatchEventServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchEvent not implemented")
}
func (*UnimplementedAPIServiceServer) PushEvent(context.Context, *Event) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushEvent not implemented")
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_PostLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.Log)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).PostLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/PostLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).PostLog(ctx, req.(*models.Log))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetProjectByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetProjectByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetProjectByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetProjectByID(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetWorkflowById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetWorkflowById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetWorkflowById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetWorkflowById(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetSystemLogId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetSystemLogId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetSystemLogId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetSystemLogId(ctx, req.(*LogIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetWorkflowJobById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetWorkflowJobById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetWorkflowJobById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetWorkflowJobById(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetActionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetActionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetActionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetActionById(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetActionListByIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetActionListByIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetActionListByIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetActionListByIds(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetProjectList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetProjectList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetProjectList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetProjectList(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_CreateOrUpdateWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.WorkflowExecution)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).CreateOrUpdateWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/CreateOrUpdateWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).CreateOrUpdateWorkflowExecution(ctx, req.(*models.WorkflowExecution))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_CreateOrUpdateExecutionRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.ExecutionRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).CreateOrUpdateExecutionRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/CreateOrUpdateExecutionRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).CreateOrUpdateExecutionRecord(ctx, req.(*models.ExecutionRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_AddProcessRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(models.ProcessRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).AddProcessRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/AddProcessRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).AddProcessRecord(ctx, req.(*models.ProcessRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetWorkflowExecutionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetWorkflowExecutionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetWorkflowExecutionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetWorkflowExecutionById(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetWorkflowRequiredResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetWorkflowRequiredResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/GetWorkflowRequiredResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetWorkflowRequiredResources(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_SaveValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).SaveValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/SaveValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).SaveValue(ctx, req.(*SaveValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_LoadValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).LoadValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/LoadValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).LoadValue(ctx, req.(*LoadValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_SaveAllValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAllValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).SaveAllValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/SaveAllValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).SaveAllValue(ctx, req.(*SaveAllValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_LoadAllValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadAllValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).LoadAllValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/LoadAllValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).LoadAllValue(ctx, req.(*LoadAllValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_WatchEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchEventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServiceServer).WatchEvent(m, &aPIServiceWatchEventServer{stream})
}

type APIService_WatchEventServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type aPIServiceWatchEventServer struct {
	grpc.ServerStream
}

func (x *aPIServiceWatchEventServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _APIService_PushEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).PushEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.APIService/PushEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).PushEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostLog",
			Handler:    _APIService_PostLog_Handler,
		},
		{
			MethodName: "GetProjectByID",
			Handler:    _APIService_GetProjectByID_Handler,
		},
		{
			MethodName: "GetWorkflowById",
			Handler:    _APIService_GetWorkflowById_Handler,
		},
		{
			MethodName: "GetSystemLogId",
			Handler:    _APIService_GetSystemLogId_Handler,
		},
		{
			MethodName: "GetWorkflowJobById",
			Handler:    _APIService_GetWorkflowJobById_Handler,
		},
		{
			MethodName: "GetActionById",
			Handler:    _APIService_GetActionById_Handler,
		},
		{
			MethodName: "GetActionListByIds",
			Handler:    _APIService_GetActionListByIds_Handler,
		},
		{
			MethodName: "GetProjectList",
			Handler:    _APIService_GetProjectList_Handler,
		},
		{
			MethodName: "CreateOrUpdateWorkflowExecution",
			Handler:    _APIService_CreateOrUpdateWorkflowExecution_Handler,
		},
		{
			MethodName: "CreateOrUpdateExecutionRecord",
			Handler:    _APIService_CreateOrUpdateExecutionRecord_Handler,
		},
		{
			MethodName: "AddProcessRecord",
			Handler:    _APIService_AddProcessRecord_Handler,
		},
		{
			MethodName: "GetWorkflowExecutionById",
			Handler:    _APIService_GetWorkflowExecutionById_Handler,
		},
		{
			MethodName: "GetWorkflowRequiredResources",
			Handler:    _APIService_GetWorkflowRequiredResources_Handler,
		},
		{
			MethodName: "SaveValue",
			Handler:    _APIService_SaveValue_Handler,
		},
		{
			MethodName: "LoadValue",
			Handler:    _APIService_LoadValue_Handler,
		},
		{
			MethodName: "SaveAllValue",
			Handler:    _APIService_SaveAllValue_Handler,
		},
		{
			MethodName: "LoadAllValue",
			Handler:    _APIService_LoadAllValue_Handler,
		},
		{
			MethodName: "PushEvent",
			Handler:    _APIService_PushEvent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchEvent",
			Handler:       _APIService_WatchEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tiops/common/services/api.proto",
}
