// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.2
// source: tiops/common/services/action.proto

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	models "tiops/common/models"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataType int32

const (
	DataType_List     DataType = 0
	DataType_Constant DataType = 1
	DataType_File     DataType = 2
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "List",
		1: "Constant",
		2: "File",
	}
	DataType_value = map[string]int32{
		"List":     0,
		"Constant": 1,
		"File":     2,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_services_action_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_tiops_common_services_action_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{0}
}

type ResponseCode int32

const (
	ResponseCode_UNKNOWN ResponseCode = 0
	ResponseCode_OK      ResponseCode = 1
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
	}
	ResponseCode_value = map[string]int32{
		"UNKNOWN": 0,
		"OK":      1,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_services_action_proto_enumTypes[1].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_tiops_common_services_action_proto_enumTypes[1]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{1}
}

type ActionMessageType int32

const (
	ActionMessageType_PushData  ActionMessageType = 0
	ActionMessageType_StreamCmd ActionMessageType = 1
)

// Enum value maps for ActionMessageType.
var (
	ActionMessageType_name = map[int32]string{
		0: "PushData",
		1: "StreamCmd",
	}
	ActionMessageType_value = map[string]int32{
		"PushData":  0,
		"StreamCmd": 1,
	}
)

func (x ActionMessageType) Enum() *ActionMessageType {
	p := new(ActionMessageType)
	*p = x
	return p
}

func (x ActionMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_tiops_common_services_action_proto_enumTypes[2].Descriptor()
}

func (ActionMessageType) Type() protoreflect.EnumType {
	return &file_tiops_common_services_action_proto_enumTypes[2]
}

func (x ActionMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionMessageType.Descriptor instead.
func (ActionMessageType) EnumDescriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{2}
}

type ActionArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
}

func (x *ActionArgument) Reset() {
	*x = ActionArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionArgument) ProtoMessage() {}

func (x *ActionArgument) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionArgument.ProtoReflect.Descriptor instead.
func (*ActionArgument) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{0}
}

func (x *ActionArgument) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ActionArgument) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ActionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	Type      DataType `protobuf:"varint,2,opt,name=type,proto3,enum=services.DataType" json:"type,omitempty" bson:"type"`
	ValueType string   `protobuf:"bytes,3,opt,name=valueType,proto3" json:"valueType,omitempty" bson:"valueType"`
	Data      [][]byte `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" bson:"data"`
	Count     int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty" bson:"count"`
	Timestamp int32    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty" bson:"timestamp"`
	TraceId   int64    `protobuf:"varint,7,opt,name=traceId,proto3" json:"traceId,omitempty" bson:"traceId"`
}

func (x *ActionData) Reset() {
	*x = ActionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionData) ProtoMessage() {}

func (x *ActionData) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionData.ProtoReflect.Descriptor instead.
func (*ActionData) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{1}
}

func (x *ActionData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActionData) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_List
}

func (x *ActionData) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *ActionData) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActionData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionData) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ActionData) GetTraceId() int64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type ActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	NodeId     string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty" bson:"nodeId"`
	ActionName string `protobuf:"bytes,3,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
	//  ActionData inputs = 2;
	Inputs map[string]*ActionData `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"inputs"`
	//  map<string, ActionArguments> args = 2;
	//  ActionArguments args = 2;
	TraceId int64 `protobuf:"varint,5,opt,name=traceId,proto3" json:"traceId,omitempty" bson:"traceId"`
}

func (x *ActionRequest) Reset() {
	*x = ActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRequest) ProtoMessage() {}

func (x *ActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRequest.ProtoReflect.Descriptor instead.
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{2}
}

func (x *ActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActionRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ActionRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *ActionRequest) GetInputs() map[string]*ActionData {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ActionRequest) GetTraceId() int64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	Code    ResponseCode `protobuf:"varint,2,opt,name=code,proto3,enum=services.ResponseCode" json:"code,omitempty" bson:"code"`
	Message string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	//  ActionData result = 4;
	Outputs map[string]*ActionData `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"outputs"`
	Count   int32                  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty" bson:"count"`
	Done    bool                   `protobuf:"varint,6,opt,name=done,proto3" json:"done,omitempty" bson:"done"`
	TraceId int64                  `protobuf:"varint,7,opt,name=traceId,proto3" json:"traceId,omitempty" bson:"traceId"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{3}
}

func (x *ActionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActionResponse) GetCode() ResponseCode {
	if x != nil {
		return x.Code
	}
	return ResponseCode_UNKNOWN
}

func (x *ActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActionResponse) GetOutputs() map[string]*ActionData {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ActionResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *ActionResponse) GetTraceId() int64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type ServiceAndAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty" bson:"service"`
	Action    string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty" bson:"action"`
	NodeId    string `protobuf:"bytes,3,opt,name=nodeId,proto3" json:"nodeId,omitempty" bson:"nodeId"`
	InputName string `protobuf:"bytes,4,opt,name=inputName,proto3" json:"inputName,omitempty" bson:"inputName"`
}

func (x *ServiceAndAction) Reset() {
	*x = ServiceAndAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAndAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAndAction) ProtoMessage() {}

func (x *ServiceAndAction) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAndAction.ProtoReflect.Descriptor instead.
func (*ServiceAndAction) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceAndAction) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ServiceAndAction) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ServiceAndAction) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ServiceAndAction) GetInputName() string {
	if x != nil {
		return x.InputName
	}
	return ""
}

type NextActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputName string              `protobuf:"bytes,1,opt,name=outputName,proto3" json:"outputName,omitempty" bson:"outputName"`
	Actions    []*ServiceAndAction `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty" bson:"actions"`
}

func (x *NextActions) Reset() {
	*x = NextActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextActions) ProtoMessage() {}

func (x *NextActions) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextActions.ProtoReflect.Descriptor instead.
func (*NextActions) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{5}
}

func (x *NextActions) GetOutputName() string {
	if x != nil {
		return x.OutputName
	}
	return ""
}

func (x *NextActions) GetActions() []*ServiceAndAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type RegisterActionNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName      string             `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
	NodeId          string             `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty" bson:"nodeId"`
	ActionInfo      *models.ActionInfo `protobuf:"bytes,3,opt,name=actionInfo,proto3" json:"actionInfo,omitempty" bson:"actionInfo"`
	ActionOptions   map[string]string  `protobuf:"bytes,4,rep,name=actionOptions,proto3" json:"actionOptions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"actionOptions"`
	NextActions     []*NextActions     `protobuf:"bytes,5,rep,name=nextActions,proto3" json:"nextActions,omitempty" bson:"nextActions"`
	InnerActionInfo *models.ActionInfo `protobuf:"bytes,8,opt,name=innerActionInfo,proto3" json:"innerActionInfo,omitempty" bson:"innerActionInfo"`
}

func (x *RegisterActionNodeRequest) Reset() {
	*x = RegisterActionNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterActionNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterActionNodeRequest) ProtoMessage() {}

func (x *RegisterActionNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterActionNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterActionNodeRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterActionNodeRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *RegisterActionNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterActionNodeRequest) GetActionInfo() *models.ActionInfo {
	if x != nil {
		return x.ActionInfo
	}
	return nil
}

func (x *RegisterActionNodeRequest) GetActionOptions() map[string]string {
	if x != nil {
		return x.ActionOptions
	}
	return nil
}

func (x *RegisterActionNodeRequest) GetNextActions() []*NextActions {
	if x != nil {
		return x.NextActions
	}
	return nil
}

func (x *RegisterActionNodeRequest) GetInnerActionInfo() *models.ActionInfo {
	if x != nil {
		return x.InnerActionInfo
	}
	return nil
}

type ActionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  string            `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty" bson:"nodeId"`
	Type    ActionMessageType `protobuf:"varint,2,opt,name=type,proto3,enum=services.ActionMessageType" json:"type,omitempty" bson:"type"`
	Message string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	Header  map[string]string `protobuf:"bytes,4,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"header"`
	Data    []byte            `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty" bson:"data"`
}

func (x *ActionMessage) Reset() {
	*x = ActionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionMessage) ProtoMessage() {}

func (x *ActionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionMessage.ProtoReflect.Descriptor instead.
func (*ActionMessage) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{7}
}

func (x *ActionMessage) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ActionMessage) GetType() ActionMessageType {
	if x != nil {
		return x.Type
	}
	return ActionMessageType_PushData
}

func (x *ActionMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActionMessage) GetHeader() map[string]string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ActionMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{8}
}

func (x *EmptyRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ActionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessedCount int64             `protobuf:"varint,1,opt,name=processedCount,proto3" json:"processedCount,omitempty" bson:"processedCount"`
	RestCount      int64             `protobuf:"varint,2,opt,name=restCount,proto3" json:"restCount,omitempty" bson:"restCount"`
	Done           bool              `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty" bson:"done"`
	Message        string            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	Extra          map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"extra"`
}

func (x *ActionStatus) Reset() {
	*x = ActionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionStatus) ProtoMessage() {}

func (x *ActionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionStatus.ProtoReflect.Descriptor instead.
func (*ActionStatus) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{9}
}

func (x *ActionStatus) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *ActionStatus) GetRestCount() int64 {
	if x != nil {
		return x.RestCount
	}
	return 0
}

func (x *ActionStatus) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *ActionStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActionStatus) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ServerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuRate  float32 `protobuf:"fixed32,1,opt,name=cpuRate,proto3" json:"cpuRate,omitempty" bson:"cpuRate"`
	MemUsage float32 `protobuf:"fixed32,2,opt,name=memUsage,proto3" json:"memUsage,omitempty" bson:"memUsage"`
	MemRate  float32 `protobuf:"fixed32,3,opt,name=memRate,proto3" json:"memRate,omitempty" bson:"memRate"`
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{10}
}

func (x *ServerStatus) GetCpuRate() float32 {
	if x != nil {
		return x.CpuRate
	}
	return 0
}

func (x *ServerStatus) GetMemUsage() float32 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *ServerStatus) GetMemRate() float32 {
	if x != nil {
		return x.MemRate
	}
	return 0
}

type ServiceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message       string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
	ActionsStatus map[string]*ActionStatus `protobuf:"bytes,3,rep,name=actionsStatus,proto3" json:"actionsStatus,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"actionsStatus"`
	ServerStatus  *ServerStatus            `protobuf:"bytes,4,opt,name=serverStatus,proto3" json:"serverStatus,omitempty" bson:"serverStatus"`
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{11}
}

func (x *ServiceStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServiceStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceStatus) GetActionsStatus() map[string]*ActionStatus {
	if x != nil {
		return x.ActionsStatus
	}
	return nil
}

func (x *ServiceStatus) GetServerStatus() *ServerStatus {
	if x != nil {
		return x.ServerStatus
	}
	return nil
}

type HttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" bson:"values"`
}

func (x *HttpHeader) Reset() {
	*x = HttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpHeader) ProtoMessage() {}

func (x *HttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpHeader.ProtoReflect.Descriptor instead.
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{12}
}

func (x *HttpHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HttpHeader) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type HttpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName string                 `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
	Method     string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty" bson:"method"`
	Path       string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty" bson:"path"`
	Query      map[string]string      `protobuf:"bytes,4,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"query"`
	Headers    map[string]*HttpHeader `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"headers"`
	//  map<string, bytes> postForm = 2;
	Body []byte `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty" bson:"body"`
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{13}
}

func (x *HttpRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HttpRequest) GetQuery() map[string]string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *HttpRequest) GetHeaders() map[string]*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	ContentType string                 `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty" bson:"contentType"`
	Headers     map[string]*HttpHeader `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"headers"`
	Body        []byte                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty" bson:"body"`
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{14}
}

func (x *HttpResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *HttpResponse) GetHeaders() map[string]*HttpHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ActionNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionNodeStatus) Reset() {
	*x = ActionNodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionNodeStatus) ProtoMessage() {}

func (x *ActionNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionNodeStatus.ProtoReflect.Descriptor instead.
func (*ActionNodeStatus) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{15}
}

type RunEngineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineName string `protobuf:"bytes,1,opt,name=engineName,proto3" json:"engineName,omitempty" bson:"engineName"`
	WorkflowId string `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty" bson:"workflowId"`
}

func (x *RunEngineRequest) Reset() {
	*x = RunEngineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunEngineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunEngineRequest) ProtoMessage() {}

func (x *RunEngineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunEngineRequest.ProtoReflect.Descriptor instead.
func (*RunEngineRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{16}
}

func (x *RunEngineRequest) GetEngineName() string {
	if x != nil {
		return x.EngineName
	}
	return ""
}

func (x *RunEngineRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type EngineStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineName string `protobuf:"bytes,1,opt,name=engineName,proto3" json:"engineName,omitempty" bson:"engineName"`
}

func (x *EngineStatusRequest) Reset() {
	*x = EngineStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineStatusRequest) ProtoMessage() {}

func (x *EngineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineStatusRequest.ProtoReflect.Descriptor instead.
func (*EngineStatusRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{17}
}

func (x *EngineStatusRequest) GetEngineName() string {
	if x != nil {
		return x.EngineName
	}
	return ""
}

type ActionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName string `protobuf:"bytes,1,opt,name=actionName,proto3" json:"actionName,omitempty" bson:"actionName"`
}

func (x *ActionStatusRequest) Reset() {
	*x = ActionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionStatusRequest) ProtoMessage() {}

func (x *ActionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionStatusRequest.ProtoReflect.Descriptor instead.
func (*ActionStatusRequest) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{18}
}

func (x *ActionStatusRequest) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

type EngineStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" bson:"message"`
}

func (x *EngineStatusResponse) Reset() {
	*x = EngineStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tiops_common_services_action_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineStatusResponse) ProtoMessage() {}

func (x *EngineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tiops_common_services_action_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineStatusResponse.ProtoReflect.Descriptor instead.
func (*EngineStatusResponse) Descriptor() ([]byte, []int) {
	return file_tiops_common_services_action_proto_rawDescGZIP(), []int{19}
}

func (x *EngineStatusResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EngineStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_tiops_common_services_action_proto protoreflect.FileDescriptor

var file_tiops_common_services_action_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x69, 0x6f, 0x70, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x74, 0x69,
	0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74,
	0x69, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3a, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0a,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x1a, 0x4f, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd, 0x02, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x1a, 0x50, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x63, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9e, 0x03, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x5c, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x65,
	0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f,
	0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x88, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x52, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x63, 0x70, 0x75, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x52, 0x61, 0x74, 0x65,
	0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06,
	0x10, 0x07, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x4a, 0x04,
	0x08, 0x09, 0x10, 0x0a, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x58, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x38, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xef, 0x02, 0x0a,
	0x0b, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x3c, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x1a, 0x38, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9,
	0x01, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x50, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52,
	0x0a, 0x10, 0x52, 0x75, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x44, 0x0a, 0x14, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x2c, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x10, 0x02, 0x2a, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x2a, 0x30, 0x0a, 0x11, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6d, 0x64, 0x10, 0x01, 0x32, 0xc4, 0x06, 0x0a, 0x0e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x43, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x61, 0x6c,
	0x6c, 0x48, 0x74, 0x74, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x42, 0x1a, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x74, 0x69, 0x6f, 0x70, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tiops_common_services_action_proto_rawDescOnce sync.Once
	file_tiops_common_services_action_proto_rawDescData = file_tiops_common_services_action_proto_rawDesc
)

func file_tiops_common_services_action_proto_rawDescGZIP() []byte {
	file_tiops_common_services_action_proto_rawDescOnce.Do(func() {
		file_tiops_common_services_action_proto_rawDescData = protoimpl.X.CompressGZIP(file_tiops_common_services_action_proto_rawDescData)
	})
	return file_tiops_common_services_action_proto_rawDescData
}

var file_tiops_common_services_action_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_tiops_common_services_action_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_tiops_common_services_action_proto_goTypes = []interface{}{
	(DataType)(0),                     // 0: services.DataType
	(ResponseCode)(0),                 // 1: services.ResponseCode
	(ActionMessageType)(0),            // 2: services.ActionMessageType
	(*ActionArgument)(nil),            // 3: services.ActionArgument
	(*ActionData)(nil),                // 4: services.ActionData
	(*ActionRequest)(nil),             // 5: services.ActionRequest
	(*ActionResponse)(nil),            // 6: services.ActionResponse
	(*ServiceAndAction)(nil),          // 7: services.ServiceAndAction
	(*NextActions)(nil),               // 8: services.NextActions
	(*RegisterActionNodeRequest)(nil), // 9: services.RegisterActionNodeRequest
	(*ActionMessage)(nil),             // 10: services.ActionMessage
	(*EmptyRequest)(nil),              // 11: services.EmptyRequest
	(*ActionStatus)(nil),              // 12: services.ActionStatus
	(*ServerStatus)(nil),              // 13: services.ServerStatus
	(*ServiceStatus)(nil),             // 14: services.ServiceStatus
	(*HttpHeader)(nil),                // 15: services.HttpHeader
	(*HttpRequest)(nil),               // 16: services.HttpRequest
	(*HttpResponse)(nil),              // 17: services.HttpResponse
	(*ActionNodeStatus)(nil),          // 18: services.ActionNodeStatus
	(*RunEngineRequest)(nil),          // 19: services.RunEngineRequest
	(*EngineStatusRequest)(nil),       // 20: services.EngineStatusRequest
	(*ActionStatusRequest)(nil),       // 21: services.ActionStatusRequest
	(*EngineStatusResponse)(nil),      // 22: services.EngineStatusResponse
	nil,                               // 23: services.ActionRequest.InputsEntry
	nil,                               // 24: services.ActionResponse.OutputsEntry
	nil,                               // 25: services.RegisterActionNodeRequest.ActionOptionsEntry
	nil,                               // 26: services.ActionMessage.HeaderEntry
	nil,                               // 27: services.ActionStatus.ExtraEntry
	nil,                               // 28: services.ServiceStatus.ActionsStatusEntry
	nil,                               // 29: services.HttpRequest.QueryEntry
	nil,                               // 30: services.HttpRequest.HeadersEntry
	nil,                               // 31: services.HttpResponse.HeadersEntry
	(*models.ActionInfo)(nil),         // 32: models.ActionInfo
	(*QueryRequest)(nil),              // 33: services.QueryRequest
	(*StatusResponse)(nil),            // 34: services.StatusResponse
	(*models.WorkflowResources)(nil),  // 35: models.WorkflowResources
	(*models.ExecutionRecord)(nil),    // 36: models.ExecutionRecord
}
var file_tiops_common_services_action_proto_depIdxs = []int32{
	0,  // 0: services.ActionData.type:type_name -> services.DataType
	23, // 1: services.ActionRequest.inputs:type_name -> services.ActionRequest.InputsEntry
	1,  // 2: services.ActionResponse.code:type_name -> services.ResponseCode
	24, // 3: services.ActionResponse.outputs:type_name -> services.ActionResponse.OutputsEntry
	7,  // 4: services.NextActions.actions:type_name -> services.ServiceAndAction
	32, // 5: services.RegisterActionNodeRequest.actionInfo:type_name -> models.ActionInfo
	25, // 6: services.RegisterActionNodeRequest.actionOptions:type_name -> services.RegisterActionNodeRequest.ActionOptionsEntry
	8,  // 7: services.RegisterActionNodeRequest.nextActions:type_name -> services.NextActions
	32, // 8: services.RegisterActionNodeRequest.innerActionInfo:type_name -> models.ActionInfo
	2,  // 9: services.ActionMessage.type:type_name -> services.ActionMessageType
	26, // 10: services.ActionMessage.header:type_name -> services.ActionMessage.HeaderEntry
	27, // 11: services.ActionStatus.extra:type_name -> services.ActionStatus.ExtraEntry
	28, // 12: services.ServiceStatus.actionsStatus:type_name -> services.ServiceStatus.ActionsStatusEntry
	13, // 13: services.ServiceStatus.serverStatus:type_name -> services.ServerStatus
	29, // 14: services.HttpRequest.query:type_name -> services.HttpRequest.QueryEntry
	30, // 15: services.HttpRequest.headers:type_name -> services.HttpRequest.HeadersEntry
	31, // 16: services.HttpResponse.headers:type_name -> services.HttpResponse.HeadersEntry
	4,  // 17: services.ActionRequest.InputsEntry.value:type_name -> services.ActionData
	4,  // 18: services.ActionResponse.OutputsEntry.value:type_name -> services.ActionData
	12, // 19: services.ServiceStatus.ActionsStatusEntry.value:type_name -> services.ActionStatus
	15, // 20: services.HttpRequest.HeadersEntry.value:type_name -> services.HttpHeader
	15, // 21: services.HttpResponse.HeadersEntry.value:type_name -> services.HttpHeader
	5,  // 22: services.ActionsService.CallAction:input_type -> services.ActionRequest
	5,  // 23: services.ActionsService.CallActionPullStream:input_type -> services.ActionRequest
	19, // 24: services.ActionsService.RunEngine:input_type -> services.RunEngineRequest
	20, // 25: services.ActionsService.GetEngineStatus:input_type -> services.EngineStatusRequest
	21, // 26: services.ActionsService.GetActionStatus:input_type -> services.ActionStatusRequest
	9,  // 27: services.ActionsService.RegisterActionNode:input_type -> services.RegisterActionNodeRequest
	33, // 28: services.ActionsService.GetRequiredResources:input_type -> services.QueryRequest
	11, // 29: services.ActionsService.GetServiceStatus:input_type -> services.EmptyRequest
	11, // 30: services.ActionsService.GetExecutionRecord:input_type -> services.EmptyRequest
	16, // 31: services.ActionsService.CallHttpAction:input_type -> services.HttpRequest
	10, // 32: services.ActionsService.PushMessage:input_type -> services.ActionMessage
	6,  // 33: services.ActionsService.CallAction:output_type -> services.ActionResponse
	6,  // 34: services.ActionsService.CallActionPullStream:output_type -> services.ActionResponse
	34, // 35: services.ActionsService.RunEngine:output_type -> services.StatusResponse
	22, // 36: services.ActionsService.GetEngineStatus:output_type -> services.EngineStatusResponse
	12, // 37: services.ActionsService.GetActionStatus:output_type -> services.ActionStatus
	34, // 38: services.ActionsService.RegisterActionNode:output_type -> services.StatusResponse
	35, // 39: services.ActionsService.GetRequiredResources:output_type -> models.WorkflowResources
	14, // 40: services.ActionsService.GetServiceStatus:output_type -> services.ServiceStatus
	36, // 41: services.ActionsService.GetExecutionRecord:output_type -> models.ExecutionRecord
	17, // 42: services.ActionsService.CallHttpAction:output_type -> services.HttpResponse
	34, // 43: services.ActionsService.PushMessage:output_type -> services.StatusResponse
	33, // [33:44] is the sub-list for method output_type
	22, // [22:33] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_tiops_common_services_action_proto_init() }
func file_tiops_common_services_action_proto_init() {
	if File_tiops_common_services_action_proto != nil {
		return
	}
	file_tiops_common_services_response_proto_init()
	file_tiops_common_services_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tiops_common_services_action_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAndAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterActionNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionNodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunEngineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tiops_common_services_action_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tiops_common_services_action_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tiops_common_services_action_proto_goTypes,
		DependencyIndexes: file_tiops_common_services_action_proto_depIdxs,
		EnumInfos:         file_tiops_common_services_action_proto_enumTypes,
		MessageInfos:      file_tiops_common_services_action_proto_msgTypes,
	}.Build()
	File_tiops_common_services_action_proto = out.File
	file_tiops_common_services_action_proto_rawDesc = nil
	file_tiops_common_services_action_proto_goTypes = nil
	file_tiops_common_services_action_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ActionsServiceClient is the client API for ActionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActionsServiceClient interface {
	// define the interface and data type
	CallAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error)
	CallActionPullStream(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (ActionsService_CallActionPullStreamClient, error)
	RunEngine(ctx context.Context, in *RunEngineRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetEngineStatus(ctx context.Context, in *EngineStatusRequest, opts ...grpc.CallOption) (*EngineStatusResponse, error)
	GetActionStatus(ctx context.Context, in *ActionStatusRequest, opts ...grpc.CallOption) (*ActionStatus, error)
	RegisterActionNode(ctx context.Context, in *RegisterActionNodeRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetRequiredResources(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowResources, error)
	GetServiceStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ServiceStatus, error)
	GetExecutionRecord(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*models.ExecutionRecord, error)
	CallHttpAction(ctx context.Context, in *HttpRequest, opts ...grpc.CallOption) (*HttpResponse, error)
	PushMessage(ctx context.Context, opts ...grpc.CallOption) (ActionsService_PushMessageClient, error)
}

type actionsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewActionsServiceClient(cc grpc.ClientConnInterface) ActionsServiceClient {
	return &actionsServiceClient{cc}
}

func (c *actionsServiceClient) CallAction(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*ActionResponse, error) {
	out := new(ActionResponse)
	err := c.cc.Invoke(ctx, "/services.ActionsService/CallAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) CallActionPullStream(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (ActionsService_CallActionPullStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActionsService_serviceDesc.Streams[0], "/services.ActionsService/CallActionPullStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &actionsServiceCallActionPullStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ActionsService_CallActionPullStreamClient interface {
	Recv() (*ActionResponse, error)
	grpc.ClientStream
}

type actionsServiceCallActionPullStreamClient struct {
	grpc.ClientStream
}

func (x *actionsServiceCallActionPullStreamClient) Recv() (*ActionResponse, error) {
	m := new(ActionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *actionsServiceClient) RunEngine(ctx context.Context, in *RunEngineRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.ActionsService/RunEngine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetEngineStatus(ctx context.Context, in *EngineStatusRequest, opts ...grpc.CallOption) (*EngineStatusResponse, error) {
	out := new(EngineStatusResponse)
	err := c.cc.Invoke(ctx, "/services.ActionsService/GetEngineStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetActionStatus(ctx context.Context, in *ActionStatusRequest, opts ...grpc.CallOption) (*ActionStatus, error) {
	out := new(ActionStatus)
	err := c.cc.Invoke(ctx, "/services.ActionsService/GetActionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) RegisterActionNode(ctx context.Context, in *RegisterActionNodeRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/services.ActionsService/RegisterActionNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetRequiredResources(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*models.WorkflowResources, error) {
	out := new(models.WorkflowResources)
	err := c.cc.Invoke(ctx, "/services.ActionsService/GetRequiredResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetServiceStatus(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ServiceStatus, error) {
	out := new(ServiceStatus)
	err := c.cc.Invoke(ctx, "/services.ActionsService/GetServiceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetExecutionRecord(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*models.ExecutionRecord, error) {
	out := new(models.ExecutionRecord)
	err := c.cc.Invoke(ctx, "/services.ActionsService/GetExecutionRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) CallHttpAction(ctx context.Context, in *HttpRequest, opts ...grpc.CallOption) (*HttpResponse, error) {
	out := new(HttpResponse)
	err := c.cc.Invoke(ctx, "/services.ActionsService/CallHttpAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) PushMessage(ctx context.Context, opts ...grpc.CallOption) (ActionsService_PushMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActionsService_serviceDesc.Streams[1], "/services.ActionsService/PushMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &actionsServicePushMessageClient{stream}
	return x, nil
}

type ActionsService_PushMessageClient interface {
	Send(*ActionMessage) error
	CloseAndRecv() (*StatusResponse, error)
	grpc.ClientStream
}

type actionsServicePushMessageClient struct {
	grpc.ClientStream
}

func (x *actionsServicePushMessageClient) Send(m *ActionMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *actionsServicePushMessageClient) CloseAndRecv() (*StatusResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ActionsServiceServer is the server API for ActionsService service.
type ActionsServiceServer interface {
	// define the interface and data type
	CallAction(context.Context, *ActionRequest) (*ActionResponse, error)
	CallActionPullStream(*ActionRequest, ActionsService_CallActionPullStreamServer) error
	RunEngine(context.Context, *RunEngineRequest) (*StatusResponse, error)
	GetEngineStatus(context.Context, *EngineStatusRequest) (*EngineStatusResponse, error)
	GetActionStatus(context.Context, *ActionStatusRequest) (*ActionStatus, error)
	RegisterActionNode(context.Context, *RegisterActionNodeRequest) (*StatusResponse, error)
	GetRequiredResources(context.Context, *QueryRequest) (*models.WorkflowResources, error)
	GetServiceStatus(context.Context, *EmptyRequest) (*ServiceStatus, error)
	GetExecutionRecord(context.Context, *EmptyRequest) (*models.ExecutionRecord, error)
	CallHttpAction(context.Context, *HttpRequest) (*HttpResponse, error)
	PushMessage(ActionsService_PushMessageServer) error
}

// UnimplementedActionsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedActionsServiceServer struct {
}

func (*UnimplementedActionsServiceServer) CallAction(context.Context, *ActionRequest) (*ActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallAction not implemented")
}
func (*UnimplementedActionsServiceServer) CallActionPullStream(*ActionRequest, ActionsService_CallActionPullStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CallActionPullStream not implemented")
}
func (*UnimplementedActionsServiceServer) RunEngine(context.Context, *RunEngineRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunEngine not implemented")
}
func (*UnimplementedActionsServiceServer) GetEngineStatus(context.Context, *EngineStatusRequest) (*EngineStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEngineStatus not implemented")
}
func (*UnimplementedActionsServiceServer) GetActionStatus(context.Context, *ActionStatusRequest) (*ActionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionStatus not implemented")
}
func (*UnimplementedActionsServiceServer) RegisterActionNode(context.Context, *RegisterActionNodeRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterActionNode not implemented")
}
func (*UnimplementedActionsServiceServer) GetRequiredResources(context.Context, *QueryRequest) (*models.WorkflowResources, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRequiredResources not implemented")
}
func (*UnimplementedActionsServiceServer) GetServiceStatus(context.Context, *EmptyRequest) (*ServiceStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceStatus not implemented")
}
func (*UnimplementedActionsServiceServer) GetExecutionRecord(context.Context, *EmptyRequest) (*models.ExecutionRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExecutionRecord not implemented")
}
func (*UnimplementedActionsServiceServer) CallHttpAction(context.Context, *HttpRequest) (*HttpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CallHttpAction not implemented")
}
func (*UnimplementedActionsServiceServer) PushMessage(ActionsService_PushMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method PushMessage not implemented")
}

func RegisterActionsServiceServer(s *grpc.Server, srv ActionsServiceServer) {
	s.RegisterService(&_ActionsService_serviceDesc, srv)
}

func _ActionsService_CallAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).CallAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/CallAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).CallAction(ctx, req.(*ActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_CallActionPullStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ActionsServiceServer).CallActionPullStream(m, &actionsServiceCallActionPullStreamServer{stream})
}

type ActionsService_CallActionPullStreamServer interface {
	Send(*ActionResponse) error
	grpc.ServerStream
}

type actionsServiceCallActionPullStreamServer struct {
	grpc.ServerStream
}

func (x *actionsServiceCallActionPullStreamServer) Send(m *ActionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ActionsService_RunEngine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunEngineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).RunEngine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/RunEngine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).RunEngine(ctx, req.(*RunEngineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetEngineStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetEngineStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/GetEngineStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetEngineStatus(ctx, req.(*EngineStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetActionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetActionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/GetActionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetActionStatus(ctx, req.(*ActionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_RegisterActionNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterActionNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).RegisterActionNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/RegisterActionNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).RegisterActionNode(ctx, req.(*RegisterActionNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetRequiredResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetRequiredResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/GetRequiredResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetRequiredResources(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetServiceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetServiceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/GetServiceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetServiceStatus(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetExecutionRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetExecutionRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/GetExecutionRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetExecutionRecord(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_CallHttpAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HttpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).CallHttpAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.ActionsService/CallHttpAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).CallHttpAction(ctx, req.(*HttpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_PushMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActionsServiceServer).PushMessage(&actionsServicePushMessageServer{stream})
}

type ActionsService_PushMessageServer interface {
	SendAndClose(*StatusResponse) error
	Recv() (*ActionMessage, error)
	grpc.ServerStream
}

type actionsServicePushMessageServer struct {
	grpc.ServerStream
}

func (x *actionsServicePushMessageServer) SendAndClose(m *StatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *actionsServicePushMessageServer) Recv() (*ActionMessage, error) {
	m := new(ActionMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ActionsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.ActionsService",
	HandlerType: (*ActionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CallAction",
			Handler:    _ActionsService_CallAction_Handler,
		},
		{
			MethodName: "RunEngine",
			Handler:    _ActionsService_RunEngine_Handler,
		},
		{
			MethodName: "GetEngineStatus",
			Handler:    _ActionsService_GetEngineStatus_Handler,
		},
		{
			MethodName: "GetActionStatus",
			Handler:    _ActionsService_GetActionStatus_Handler,
		},
		{
			MethodName: "RegisterActionNode",
			Handler:    _ActionsService_RegisterActionNode_Handler,
		},
		{
			MethodName: "GetRequiredResources",
			Handler:    _ActionsService_GetRequiredResources_Handler,
		},
		{
			MethodName: "GetServiceStatus",
			Handler:    _ActionsService_GetServiceStatus_Handler,
		},
		{
			MethodName: "GetExecutionRecord",
			Handler:    _ActionsService_GetExecutionRecord_Handler,
		},
		{
			MethodName: "CallHttpAction",
			Handler:    _ActionsService_CallHttpAction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CallActionPullStream",
			Handler:       _ActionsService_CallActionPullStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PushMessage",
			Handler:       _ActionsService_PushMessage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "tiops/common/services/action.proto",
}
